<!DOCTYPE html>
<html>


<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui">
    <link rel="icon" type="image/png" href="/resources/iconoAsobeecol.png">
    <title>Gestion - Asobeecol</title>
    <!-- Importación de CDNS -->
    <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet">
    <!-- Importación de iconos para el material design -->
    <link href="https://cdn.jsdelivr.net/npm/@mdi/font@5.x/css/materialdesignicons.min.css" rel="stylesheet">
    <!-- Importación de Vuetify, el cual maneja el material design estilo aplicación android -->
    <link href="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.min.css" rel="stylesheet">
    <!-- Importación del plugin SweetAlert2, el cual nos ayudará con las alertas de la aplicación -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.0.2/dist/sweetalert2.min.css">

</head>

<body>
    
      
      

    <!--Declaramos un div, este va abarcar todo los componenetes de vuetify, ademas en este se declaro un ID para luego llamarlo en vuetify -->
    <div id="gestion">
        <v-app id="inspire" style="background: rgba(151, 162, 196, 0.146);">
            <div>
                <!-- Nav -->
                <v-layout>
                    <v-app-bar
                      color="white"
                      density="compact"
                    >
                      <template >
                        <v-app-bar-nav-icon @click="drawer1 = !drawer1"></v-app-bar-nav-icon>
                      </template>
                      <v-spacer></v-spacer>Hola {{nombreBrigadistaActual}}
                      <v-btn color="#FF0000" icon  @click='drawer= !drawer'>
                        <v-icon size="21"
                            style=" box-shadow: 0 0 5px #ff0000; color:#000000; background-color: white; border-radius: 100%; padding: 8px; font-weight: bold;">
                            mdi mdi-chevron-down</v-icon>
                    </v-btn>                     
              
                    </v-app-bar>
              
                    
                  </v-layout>
                
                
                
                



                <v-sheet color="#606F8C" height="175px" max-width="100%"
                    style="background: linear-gradient(to bottom right, #ff000075, #e9a2a2);">

                    <v-card-text>

                        <v-row justify="end" style="padding-right: 23px; padding-top: 21px; padding-left: 28px;">


                            <div id="imgAsobeecol"
                                style="margin-left: 40%; margin-top: 0.7%;  display:flex; flex-direction: row;">
                                <img src="/resources/LogoAsobeecol.png" style="margin-top: -4px;" height="180%">
                            </div>
                            <v-spacer></v-spacer>


                        </v-row>
                    </v-card-text>
                </v-sheet>


                <template>



                    <v-progress-linear color="#5c76a8" value="0" rounded 
                        style="height: 7px; margin-bottom: -50px; margin-top: -3px;"></v-progress-linear>
                    <v-row dense>

                        <v-card class="mx-auto" max-width="280" outlined id="iconMenu" @click="listado='Brigadistas'; listaDatos()"
                            style="border-radius: 20px;  box-shadow: 0 0 5px rgba(3, 33, 97, 0.2);">
                            <v-list-item three-line>
                                <v-list-item-content>
                                    <v-list-item-title class="text-h5 mb-1">
                                        <h4>Brigadistas</h4>
                                        <v-divider></v-divider>
                                    </v-list-item-title>
                                    <v-list-item-title class="text-h6 mb-1">
                                        <h6> <v-icon color="#42ab49" size="15">mdi-circle</v-icon>Activos: {{brigadistaActivoContador}}</h6>                                        
                                    </v-list-item-title>
                                    <v-divider></v-divider>
                                    
                                    <v-list-item-title class="text-h6 mb-1">
                                        <h6><v-icon color="#c63637" size="15">mdi-circle</v-icon>Inactivos: {{brigadistaInactivoContador}}</h6>                                        
                                    </v-list-item-title>


                                </v-list-item-content>
                                <v-list-item-avatar size="60" text 
                                    id="iconSuspendida"
                                    style="box-shadow: 0 0 5px rgba(3, 33, 97, 0.2); background: linear-gradient(to bottom right, #5d83ae, #486f99); padding: 20px; margin-top: 20px;">
                                    <v-icon dark size="30">mdi-account-multiple</v-icon>
                                </v-list-item-avatar>
                            </v-list-item>
                        </v-card>



                        <v-card class="mx-auto" max-width="260" outlined id="iconMenu" @click="listado='Donaciones';  listadoDonacion='Recibida';listaDatos()"
                            style="border-radius: 20px;  box-shadow: 0 0 5px rgba(3, 33, 97, 0.2);">
                            <v-list-item three-line>
                                <v-list-item-content>
                                    <v-list-item-title class="text-h5 mb-1">
                                        <h4>Donaciones</h4>
                                        <v-divider></v-divider>
                                    </v-list-item-title>
                                    
                                        
                                        
                                    <v-list-item-title class="text-h6 mb-1">
                                        <h6> <v-icon color="#42ab49" size="20">mdi-handshake-outline</v-icon>Recibidas: {{donacionRecibidaContador}}</h6>                                        
                                    </v-list-item-title>
                                    <v-divider></v-divider>
                                    
                                    <v-list-item-title class="text-h6 mb-1">
                                        <h6><v-icon color="#486f99" size="20">mdi-home-variant</v-icon>En Almacén: {{donacionEnAlmacenContador}}</h6>                                        
                                    </v-list-item-title>

                                    <v-list-item-title class="text-h6 mb-1">
                                        <h6><v-icon color="#c63637" size="20">mdi-send-check</v-icon>Entregadas: {{donacionEntregadaContador}}</h6>                                        
                                    </v-list-item-title>


                                </v-list-item-content>
                                <v-list-item-avatar size="60" text                                   
                                    
                                    style="box-shadow: 0 0 5px rgba(3, 33, 97, 0.2); background: linear-gradient(to bottom right, #71d772, #42ab49); padding: 20px; margin-top: 20px;">
                                    <v-icon dark size="30">mdi-currency-usd</v-icon>
                                </v-list-item-avatar>
                            </v-list-item>
                        </v-card>


                        <v-card class="mx-auto" max-width="260" outlined id="iconMenu" @click="listado='Dotaciones'; listaDatos()"
                            style="border-radius: 20px; box-shadow: 0 0 5px rgba(3, 33, 97, 0.2);">
                            <v-list-item three-line>
                                <v-list-item-content>
                                    <v-list-item-title class="text-h5 mb-1">
                                        <h4>Dotaciones</h4>
                                        <v-divider></v-divider>
                                    </v-list-item-title>

                                    
                                </v-list-item-content>
                                <v-list-item-avatar size="60" text 
                                    
                                    style=" box-shadow: 0 0 5px rgba(3, 33, 97, 0.2); background: linear-gradient(to bottom right, #fed353, #dbcc44); padding: 20px; margin-top: 20px;">
                                    <v-icon dark size="30">mdi-hard-hat</v-icon>
                                </v-list-item-avatar>
                            </v-list-item>
                        </v-card>


                        <v-card class="mx-auto" max-width="260" outlined id="iconMenu" text @click="listado='Eventos'; listaDatos()"
                            style="border-radius: 20px; box-shadow: 0 0 5px rgba(3, 33, 97, 0.2);">
                            <v-list-item three-line>
                                <v-list-item-content>
                                    <v-list-item-title class="text-h5 mb-1">
                                        <h4>Eventos</h4>
                                        <v-divider></v-divider>
                                    </v-list-item-title>

                                    <v-list-item-title class="text-h6 mb-1">
                                        <h6> <v-icon color="#42ab49" size="20">mdi-calendar-arrow-right</v-icon>Proximos: {{eventosProximosContador}}</h6>                                        
                                    </v-list-item-title>
                                    <v-divider></v-divider>
                                    
                                    <v-list-item-title class="text-h6 mb-1">
                                        <h6><v-icon color="#486f99" size="20">mdi-calendar</v-icon>En curso: {{eventosEnCursoContador}}</h6>                                        
                                    </v-list-item-title>

                                    <v-list-item-title class="text-h6 mb-1">
                                        <h6><v-icon color="#c63637" size="20">mdi-calendar-arrow-left</v-icon>Pasados: {{eventospasadosContador}}</h6>                                        
                                    </v-list-item-title>
                                </v-list-item-content>
                                <v-list-item-avatar size="60" text @click="listado='Eventos'; listaDatos()"
                                    
                                    style=" box-shadow: 0 0 5px rgba(3, 33, 97, 0.2); background: linear-gradient(to bottom right, #c63637, #f9635c); padding: 20px; margin-top: 20px;">
                                    <v-icon dark size="30">mdi-calendar-star</v-icon>
                                </v-list-item-avatar>
                            </v-list-item>
                        </v-card>

                        




                    </v-row>
                </template>



                <v-card id="card_t">
                    <v-card-content>
                        <v-card-title>
                            <h2 class="px-1">{{ listado }}</h2>
                            <h5>{{ listadoDonacion }}</h5>


                            <v-spacer>
                            </v-spacer>
                            <v-text-field v-model="search" append-icon="mdi-magnify" label="Buscar" rounded outlined
                                hide-details class="col-3" style="max-width: 350px;">
                            </v-text-field>


                            <div id="div_brigadistas" style="display: none;">

                                <v-btn-toggle rounded>

                                    <v-btn color="#808EA6"
                                        @click="listado='Solicitudes Recuperación Cuenta'; listaDatos();" id="tg_one"
                                        style="box-shadow: 0 0 5px rgba(3, 33, 97, 0.2);"
                                        title="Solicitud Cambio Contraseña">
                                        <v-icon>mdi-key</v-icon>
                                    </v-btn>
                                </v-btn-toggle>
                                <v-btn-toggle rounded>

                                    <v-btn color="#BDECB6" @click="add_brigadista=true;" id="tg_one"
                                        style="box-shadow: 0 0 5px rgba(3, 33, 97, 0.2);" title="Añadir Brigadista">
                                        <v-icon>mdi-account-plus</v-icon>
                                    </v-btn>
                                </v-btn-toggle>

                                <v-btn-toggle rounded>
                                    <v-btn color="#EBE88E" @click="listado='Empresas'; listaDatos()" id="tg_one"
                                        style="box-shadow: 0 0 5px rgba(3, 33, 97, 0.2);" title="Empresas">
                                        <v-icon>mdi-office-building-marker-outline</v-icon>
                                    </v-btn>
                                    <v-btn color="#BDECB6" @click="add_empresa=true;" id="tg_one"
                                        style="box-shadow: 0 0 5px rgba(3, 33, 97, 0.2);" title="Añadir empresa">
                                        <v-icon>mdi-domain-plus</v-icon>
                                    </v-btn>
                                </v-btn-toggle>


                            </div>

                            <div id="div_dotaciones" style="display: none;">


                                <v-btn-toggle rounded>

                                    <v-btn color="#BDECB6" @click="add_dotacion=true;" id="tg_one"
                                        style="box-shadow: 0 0 5px rgba(3, 33, 97, 0.2);" title="Añadir Dotación">
                                        <v-icon>mdi-plus</v-icon>
                                    </v-btn>
                                </v-btn-toggle>

                                <v-btn-toggle rounded>
                                    <v-btn color="#EBE88E" @click="filtroEstadoDotacion()" id="tg_one"
                                        style="box-shadow: 0 0 5px rgba(3, 33, 97, 0.2);"
                                        title="Dotaciones Disponibles">
                                        <v-icon>mdi-filter-plus-outline</v-icon>
                                    </v-btn>

                                </v-btn-toggle>


                            </div>

                            <div id="div_donaciones" style="display: none;">


                                <v-col cols="auto ">

                                    <v-btn-toggle shaped mandatory v-model="toggle_exclusive"
                                        style=" box-shadow: 0 0 5px rgba(3, 33, 97, 0.2);">

                                        <v-btn color="#00A2FF" text @click="listadoDonacion='Recibida';listaDatos();"
                                            title="Recibidas">
                                            <v-icon>mdi-handshake-outline</v-icon>
                                        </v-btn>
                                        
                                        </v-btn>
                                        <v-btn color="#FFAA00" text @click="listadoDonacion='En Almacén';listaDatos();"
                                            title="En Almacén">
                                            <v-icon>mdi-home-variant</v-icon>
                                        </v-btn>

                                        <v-btn color="red" text @click="listadoDonacion='Entregada';listaDatos();"
                                            title="Entregadas">
                                            <v-icon>mdi-send-check</v-icon>

                                        </v-btn>

                                    </v-btn-toggle>

                                    <v-btn-toggle rounded>
                                        <v-btn color="#BDECB6" @click="add_donacion=true;" id="tg_one"
                                            style="box-shadow: 0 0 5px rgba(3, 33, 97, 0.2);"
                                            title="Añadir nueva donación">
                                            <v-icon>mdi mdi-cash-plus</v-icon>
                                        </v-btn>
                                    </v-btn-toggle>
                                </v-col>
                            </div>

                            <div id="div_eventos" style="display: none;">


                                <v-col cols="auto ">



                                    <v-btn-toggle rounded>
                                        <v-btn color="#BDECB6" @click="add_evento=true;" id="tg_one"
                                            style="box-shadow: 0 0 5px rgba(3, 33, 97, 0.2);"
                                            title="Añadir nuevo evento">
                                            <v-icon>mdi mdi-calendar-plus</v-icon>
                                        </v-btn>
                                    </v-btn-toggle>
                                </v-col>
                            </div>

                            <!-- Aqui va el contenido de creacion edicion etc -->

                            <v-dialog v-model="dialogoContraseniaUser" width="500">
                                <v-form ref="edit" v-model="valid" lazy-validation>
                                    <!--Titulo-->
                                    <v-toolbar color="#c24b4b" fixed dark style="text-align: center;">
                                        <h3 style="margin-left: 20px;">Actualizar contraseña</h3>
                                        <v-spacer></v-spacer>
                                        <v-btn class="ma-2" text class="close" icon color="white lighten-2"
                                            @click="dialogoContraseniaUser = false">
                                            <v-icon>mdi-close-thick</v-icon>
                                        </v-btn>
                                    </v-toolbar>
                                    <!--Contenido para cambiar contraseña-->
                                    <v-card-text style="background-color: whitesmoke;">
                                        <br>
                                        <v-form>
                                            <v-text-field label="Id" type="number" v-model="idBrigadistaSeleccionado"
                                                disabled></v-text-field>
                                            <v-text-field label="Nombre" type="text"
                                                v-model="nombreBrigadistaSeleccionado" disabled></v-text-field>

                                            <v-text-field label="Nueva contraseña" type="password"
                                                v-model="nuevaContraseniaUser"></v-text-field>


                                        </v-form>


                                        <v-col class="col-3">
                                            <v-btn id="btn_ac" @click="guardarContraseniaUser()">
                                                Guardar
                                            </v-btn>
                                        </v-col>
                                        </v-row>
                                        </v-col>
                                    </v-card-text>
                                </v-form>
                            </v-dialog>

                            <v-dialog v-model="dialogoContrasenia" width="500">
                                <v-form ref="edit" v-model="valid" lazy-validation>
                                    <!--Titulo-->
                                    <v-toolbar color="#c24b4b" fixed dark style="text-align: center;">
                                        <h3 style="margin-left: 20px;">Actualizar contraseña</h3>
                                        <v-spacer></v-spacer>
                                        <v-btn class="ma-2" text class="close" icon color="white lighten-2"
                                            @click="dialogoContrasenia = false">
                                            <v-icon>mdi-close-thick</v-icon>
                                        </v-btn>
                                    </v-toolbar>
                                    <!--Contenido para cambiar contraseña-->
                                    <v-card-text style="background-color: whitesmoke;">
                                        <br>
                                        <v-form>
                                            <v-text-field label="Contraseña actual" type="password"
                                                v-model="actualContrasenia"></v-text-field>

                                            <v-text-field label="Nueva contraseña" type="password"
                                                v-model="nuevaContrasenia1"></v-text-field>

                                            <v-text-field label="Confirme su contraseña" type="password"
                                                v-model="nuevaContrasenia2"></v-text-field>
                                        </v-form>


                                        <v-col class="col-3">
                                            <v-btn id="btn_ac" @click="guardarContrasenia()">
                                                Guardar
                                            </v-btn>
                                        </v-col>
                                        </v-row>
                                        </v-col>
                                    </v-card-text>
                                </v-form>
                            </v-dialog>



                            <!--Dialogo Creacion empleado -->
                            <v-dialog v-model="add_brigadista" width="500" class="addBrigadista">
                                <v-form ref="add" v-model="valid" lazy-validation>
                                    <!--Titulo-->
                                    <v-toolbar color="#c24b4b" fixed dark style="text-align: center;">
                                        <h3 style="margin-left: 20px;">Añadir brigadista</h3>
                                        <v-spacer></v-spacer>
                                        <v-btn class="ma-2" text class="close" icon color="white lighten-2"
                                            @click="add_brigadista = false; ">
                                            <v-icon>mdi-close-thick</v-icon>
                                        </v-btn>
                                    </v-toolbar>
                                    <!--Contenido para crear empleado-->
                                    <v-card-text style="background-color: whitesmoke;">
                                        <br>
                                        <v-form>
                                            
                                                
                                                <v-date-picker v-model="fv_1" locale="es-CO" :model-config="modelConfig"
                                                    :attributes="attributes" color="blue">
                                                    <template v-slot="{ inputValue, inputEvents }">
                                                        <v-text-field solo outlined ref="nuevoFechaInicioBrigadista"
                                                            required class="input-b" readonly width="170"
                                                            v-on="inputEvents" label="Fecha Incorporación"
                                                            v-model="fv_1">
                                                        </v-text-field>
                                                    </template>
                                                </v-date-picker>
                                                <v-text-field label="N° Documento" type="number"
                                                    v-model="nuevoIdBrigadista"></v-text-field>

                                                <v-text-field label="Nombre" type="text"
                                                    v-model="nuevoNombreBrigadista"></v-text-field>
                                                <v-select :items="tipoRH" v-model="nuevoRHBrigadista" elevation="2"
                                                    class="edit_c" label="RH" outlined>
                                                </v-select>
                                                <br>
                                                <v-text-field label="Correo" type="email"
                                                    v-model="nuevoCorreoBrigadista"></v-text-field>

                                                <v-text-field label="Celular" type="number"
                                                    v-model="nuevoCelularBrigadista"></v-text-field>
                                                <v-text-field label="País" type="text"
                                                    v-model="nuevoPaisBrigadista"></v-text-field>
                                                <v-text-field label="Departamento / Provincia" type="text"
                                                    v-model="nuevoDepartamentoBrigadista"></v-text-field>

                                                <v-text-field label="Ciudad" type="text"
                                                    v-model="nuevoCiudadBrigadista"></v-text-field>

                                                    <v-text-field label="Dirección" type="text"
                                                    v-model="nuevadireccionBrigadista1"></v-text-field>
                                                
                                                
                                                <v-text-field label="Profesión" type="text"
                                                    v-model="nuevoProfesionBrigadista"></v-text-field>









                                                <v-autocomplete v-model="nuevoRolBrigadista"
                                                    :no-data-text="($vuetify.noDataText = 'Rol no encontrado.')"
                                                    :rules="[v => !!v || 'Por favor, ingrese el Rol.']" required
                                                    :items="listadoRol" solo outlined label="Rol" item-value="idRol"
                                                    item-text="nombreRol">
                                                    <template v-slot:selection="data">
                                                        <v-avatar left>
                                                            <v-icon style="color: #8c6060;">
                                                                mdi-account-key</v-icon>
                                                        </v-avatar>
                                                        <v-list-item-title>
                                                            <strong>{{ data.item.idRol }}</strong> -
                                                            {{ data.item.nombreRol }}
                                                        </v-list-item-title>
                                                    </template>
                                                </v-autocomplete>




                                                <v-autocomplete v-model="nuevaEmpresaBrigadista"
                                                    :no-data-text="($vuetify.noDataText = 'Empresa no encontrada.')"
                                                    :rules="[v => !!v || 'Por favor, ingrese la Empresa.']" required
                                                    :items="listadoEmpresa" solo outlined label="Empresa"
                                                    item-value="idEmpresa" item-text="nombreEmpresa"
                                                    item-text="ciudadEmpresa">
                                                    <template v-slot:selection="data">
                                                        <v-avatar left>
                                                            <v-icon
                                                                style="color: #8c6060;">mdi-map-marker-multiple</v-icon>
                                                        </v-avatar>
                                                        <v-list-item-title>
                                                            <strong>{{ data.item.idEmpresa }}</strong> -
                                                            {{data.item.nombreEmpresa}} - {{data.item.ciudadEmpresa}}
                                                        </v-list-item-title>
                                                    </template>
                                                </v-autocomplete>







                                        </v-form>
                                        <v-col class="col-3">
                                            <v-btn id="btn_ac" @click="addBrigadista()">
                                                Añadir
                                            </v-btn>
                                        </v-col>
                                        </v-row>
                                        </v-col>
                                    </v-card-text>
                                </v-form>
                            </v-dialog>


                            <!--Dialogo edicion empleado -->
                            <v-dialog v-model="edit_brigadista" width="500" class="addBrigadista">
                                <v-form ref="add" v-model="valid" lazy-validation>
                                    <!--Titulo-->
                                    <v-toolbar color="#c24b4b" fixed dark style="text-align: center;">
                                        <h3 style="margin-left: 20px;">Editar brigadista</h3>
                                        <v-spacer></v-spacer>
                                        <v-btn class="ma-2" text class="close" icon color="white lighten-2"
                                            @click="edit_brigadista = false">
                                            <v-icon>mdi-close-thick</v-icon>
                                        </v-btn>
                                    </v-toolbar>
                                    <!--Contenido para crear empleado-->
                                    <v-card-text style="background-color: whitesmoke;">
                                        <br>
                                        <v-form>
                                            <v-radio-group v-model="editEstadoBrigadista"><v-row>
                                                    <v-radio label="Activo"
                                                        value="Activo"></v-radio><v-spacer></v-spacer>
                                                    <v-radio label="Inactivo" value="Inactivo"></v-radio>
                                                </v-row>

                                            </v-radio-group>
                                            <v-date-picker v-model="editFechaBrigadista" locale="es-CO"
                                                :model-config="modelConfig" :attributes="attributes" color="blue">
                                                <template v-slot="{ inputValue, inputEvents }">
                                                    <v-text-field solo outlined ref="nuevoFechaInicioBrigadista"
                                                        required class="input-b" readonly width="170" v-on="inputEvents"
                                                        label="Fecha Incorporación" v-model="editFechaBrigadista">
                                                    </v-text-field>
                                                </template>
                                            </v-date-picker>
                                            <v-text-field label="N° Documento" type="number" v-model="editIdBrigadista"
                                                disabled></v-text-field>

                                            <v-text-field label="Nombre" type="text"
                                                v-model="editNombreBrigadista"></v-text-field>
                                            <v-select :items="tipoRH" v-model="editRHBrigadista" elevation="2"
                                                class="edit_c" label="RH" outlined>
                                            </v-select>
                                            <br>
                                            <v-text-field label="Correo" type="email"
                                                v-model="editCorreoBrigadista"></v-text-field>

                                            <v-text-field label="Celular" type="number"
                                                v-model="editCelularBrigadista"></v-text-field>
                                            <v-text-field label="País" type="text"
                                                v-model="editPaisBrigadista"></v-text-field>
                                            <v-text-field label="Provincia" type="text"
                                                v-model="editDepartamentoBrigadista"></v-text-field>

                                            <v-text-field label="Ciudad" type="text"
                                                v-model="editCiudadBrigadista"></v-text-field>
                                            Dirección: <br>






                                            <v-text-field v-model="editDireccionBrigadista"></v-text-field>



                                            <v-text-field label="Profesión" type="text"
                                                v-model="editProfesionBrigadista"></v-text-field>




                                            <v-autocomplete v-model="editRolBrigadista"
                                                :no-data-text="($vuetify.noDataText = 'Rol no encontrado.')"
                                                :rules="[v => !!v || 'Por favor, ingrese el Rol.']" required
                                                :items="listadoRol" solo outlined label="Rol" item-value="idRol"
                                                item-text="nombreRol">
                                                <template v-slot:selection="data">
                                                    <v-avatar left>
                                                        <v-icon style="color: #8c6060;">
                                                            mdi-account-key</v-icon>
                                                    </v-avatar>
                                                    <v-list-item-title>
                                                        <strong>{{ data.item.idRol }}</strong> -
                                                        {{ data.item.nombreRol }}
                                                    </v-list-item-title>
                                                </template>
                                            </v-autocomplete>




                                            <v-autocomplete v-model="editEmpresaBrigadista"
                                                :no-data-text="($vuetify.noDataText = 'Empresa no encontrada.')"
                                                :rules="[v => !!v || 'Por favor, ingrese la Empresa.']" required
                                                :items="listadoEmpresa" solo outlined label="Empresa"
                                                item-value="idEmpresa" item-text="nombreEmpresa"
                                                item-text="ciudadEmpresa">
                                                <template v-slot:selection="data">
                                                    <v-avatar left>
                                                        <v-icon style="color: #8c6060;">mdi-map-marker-multiple</v-icon>
                                                    </v-avatar>
                                                    <v-list-item-title>
                                                        <strong>{{ data.item.idEmpresa }}</strong> -
                                                        {{data.item.nombreEmpresa}} - {{data.item.ciudadEmpresa}}
                                                    </v-list-item-title>
                                                </template>
                                            </v-autocomplete>







                                        </v-form>
                                        <v-col class="col-3">
                                            <v-btn id="btn_ac" @click="refreshBrigadista()">
                                                Actualizar
                                            </v-btn>
                                        </v-col>
                                        </v-row>
                                        </v-col>
                                    </v-card-text>
                                </v-form>
                            </v-dialog>


                            <!--Dialogo creacion empresa -->
                            <v-dialog v-model="add_empresa" width="500" class="addBrigadista">
                                <v-form ref="add" v-model="valid" lazy-validation>
                                    <!--Titulo-->
                                    <v-toolbar color="#c24b4b" fixed dark style="text-align: center;">
                                        <h3 style="margin-left: 20px;">Añadir empresa</h3>
                                        <v-spacer></v-spacer>
                                        <v-btn class="ma-2" text class="close" icon color="white lighten-2"
                                            @click="add_empresa = false">
                                            <v-icon>mdi-close-thick</v-icon>
                                        </v-btn>
                                    </v-toolbar>
                                    <!--Contenido para crear empleado-->
                                    <v-card-text style="background-color: whitesmoke;">
                                        <br>
                                        <v-form>

                                            <v-text-field label="NIT Empresa" type="number"
                                                v-model="addNitEmpresa"></v-text-field>

                                            <v-text-field label="Nombre Empresa" type="text"
                                                v-model="addNombreEmpresa"></v-text-field>
                                            <v-select :items="tipoEmpresa" v-model="addTipoEmpresa" elevation="2"
                                                class="edit_c" label="Tipo empresa" outlined>
                                            </v-select>
                                            <v-text-field label="Celular Empresa" type="number"
                                                v-model="addCelularEmpresa"></v-text-field>

                                            <v-text-field label="País" type="text"
                                                v-model="addPaisEmpresa"></v-text-field>

                                            <v-text-field label="Departamento/Provincia" type="text"
                                                v-model="addDepartamentoEmpresa"></v-text-field>
                                            <v-text-field label="Ciudad" type="text"
                                                v-model="addCiudadEmpresa"></v-text-field>

                                            Dirección: <br>
                                            <v-row>





                                                <v-text-field v-model="addDireccionEmpresa"></v-text-field>
                                                <v-icon>mdi-pound</v-icon>
                                                <v-text-field v-model="addDireccionEmpresa2"></v-text-field>


                                            </v-row>

                                        </v-form>
                                        <v-col class="col-3">
                                            <v-btn id="btn_ac" @click="addEmpresa()">
                                                Añadir
                                            </v-btn>
                                        </v-col>
                                        </v-row>
                                        </v-col>
                                    </v-card-text>
                                </v-form>
                            </v-dialog>

                            <!--Dialogo creacion empresa -->
                            <v-dialog v-model="edit_empresa" width="500" class="addBrigadista">
                                <v-form ref="add" v-model="valid" lazy-validation>
                                    <!--Titulo-->
                                    <v-toolbar color="#c24b4b" fixed dark style="text-align: center;">
                                        <h3 style="margin-left: 20px;">Editar empresa</h3>
                                        <v-spacer></v-spacer>
                                        <v-btn class="ma-2" text class="close" icon color="white lighten-2"
                                            @click="edit_empresa = false">
                                            <v-icon>mdi-close-thick</v-icon>
                                        </v-btn>
                                    </v-toolbar>
                                    <!--Contenido para crear empleado-->
                                    <v-card-text style="background-color: whitesmoke;">
                                        <br>
                                        <v-form>



                                            <v-text-field label="Nombre Empresa" type="text"
                                                v-model="editNombreEmpresa"></v-text-field>
                                            <v-select :items="tipoEmpresa" v-model="editTipoEmpresa" elevation="2"
                                                class="edit_c" label="Tipo empresa" outlined>
                                            </v-select>

                                            <v-text-field label="Celular empresa" type="number"
                                                v-model="editCelularEmpresa"></v-text-field>

                                            <v-text-field label="País" type="text"
                                                v-model="editPaisEmpresa"></v-text-field>



                                            <v-text-field label="Departamento/Provincia" type="text"
                                                v-model="editDepartamentoEmpresa"></v-text-field>
                                            <v-text-field label="Ciudad" type="text"
                                                v-model="editCiudadEmpresa"></v-text-field>

                                            Dirección: <br>
                                            <v-text-field v-model="editDireccionEmpresa"></v-text-field>

                                        </v-form>
                                        <v-col class="col-3">
                                            <v-btn id="btn_ac" @click="refreshEmpresa()">
                                                Actualizar
                                            </v-btn>
                                        </v-col>
                                        </v-row>
                                        </v-col>
                                    </v-card-text>
                                </v-form>
                            </v-dialog>



                            <!--Dialogo Creacion donacion -->
                            <v-dialog v-model="add_donacion" width="50%">
                                <v-form ref="add" v-model="valid" lazy-validation>
                                    <!--Titulo-->
                                    <v-toolbar color="#c24b4b" fixed dark style="text-align: center;">
                                        <h3 style="margin-left: 20px;">Añadir donación</h3>
                                        <v-spacer></v-spacer>
                                        <v-btn class="ma-2" text class="close" icon color="white lighten-2"
                                            @click="add_donacion = false">
                                            <v-icon>mdi-close-thick</v-icon>
                                        </v-btn>
                                    </v-toolbar>
                                    <!--Contenido para crear empleado-->
                                    <v-card-text style="background-color: whitesmoke;">
                                        <br>
                                        <v-form>
                                            <v-col class="col-12" style="margin-top: 1%;">

                                                <v-select :items="tipoDonante" v-model="addTipoDonanteDonacion"
                                                    elevation="2" class="edit_c" label="Tipo donante" outlined>
                                                </v-select>
                                                <br>
                                                <div id="addTipoDonanteEmpresa" style="display: none;">
                                                    <v-autocomplete v-model="addEmpresaDonante"
                                                        :no-data-text="($vuetify.noDataText = 'Empresa no encontrada.')"
                                                        :rules="[v => !!v || 'Por favor, ingrese la Empresa.']" required
                                                        :items="listadoEmpresa" solo outlined label="Empresa donante"
                                                        item-value="idEmpresa" item-text="nombreEmpresa"
                                                        item-text="tipoEmpresa" item-text="ciudadEmpresa">
                                                        <template v-slot:selection="data">
                                                            <v-avatar left>
                                                                <v-icon
                                                                    style="color: #8c6060;">mdi-map-marker-multiple</v-icon>
                                                            </v-avatar>
                                                            <v-list-item-title>
                                                                <strong>{{ data.item.idEmpresa }}</strong> -
                                                                {{data.item.nombreEmpresa}} -
                                                                {{data.item.ciudadEmpresa}} - {{data.item.tipoEmpresa}}
                                                            </v-list-item-title>
                                                        </template>
                                                    </v-autocomplete>

                                                </div>
                                                <div id="addTipoDonanteParticular" style="display: none;">
                                                    <v-text-field label="Nombre" type="text"
                                                        v-model="addNombreDonanteDonacion"></v-text-field>
                                                    <v-text-field label="N° Documento" type="text"
                                                        v-model="addDocumentoDonanteDonacion"></v-text-field>
                                                    <v-text-field label="Celular" type="text"
                                                        v-model="addCelularDonanteDonacion"></v-text-field>
                                                    <v-text-field label="País" type="text"
                                                        v-model="addPaisDonanteDonacion"></v-text-field>
                                                    <v-text-field label="Departamento/Provincia" type="text"
                                                        v-model="addDepartamentoDonanteDonacion"></v-text-field>
                                                    <v-text-field label="Ciudad" type="text"
                                                        v-model="addCiudadDonanteDonacion"></v-text-field>


                                                    <v-text-field v-model="addDireccionDonanteDonacion"
                                                        label="Dirección:" type="text"></v-text-field>

                                                    <br>
                                                </div>


                                                <v-select :items="tipoDonacion1" v-model="addTipoDonacion" elevation="2"
                                                    class="edit_c" label="Tipo donación" outlined>
                                                </v-select>
                                                <v-text-field label="¿Cual?" type="text" v-if="addTipoDonacion=='Otro'"
                                                    v-model="addDescripcionDonacion"></v-text-field>
                                                <v-text-field label="Nombre" type="text"
                                                    v-if="addTipoDonacion=='Equipos'||addTipoDonacion=='Herramientas'||addTipoDonacion=='Materiales de construcción'||addTipoDonacion=='Medicamentos'||addTipoDonacion=='Utencilios'||addTipoDonacion=='Alimentos'"
                                                    v-model="addDescripcionDonacion"></v-text-field>
                                                <br>

                                                <div id="donacion_prendas"
                                                    style="display: none; margin-left: 1%; margin-right: 1%;">
                                                    <v-row
                                                        style="margin-bottom: 1%; margin-left: 1%; margin-right: 1%;">
                                                        <v-select :items="GeneroDonacion" v-model="addGeneroDonacion"
                                                            elevation="2" class="edit_c" label="Genero de la prenda"
                                                            outlined>
                                                        </v-select>
                                                        <v-spacer></v-spacer>


                                                        <v-select :items="edadPrendas" v-model="addEdadDonacion"
                                                            elevation="2" class="edit_c" label="Edad prendas" outlined>
                                                        </v-select>
                                                    </v-row>
                                                    <br>
                                                </div>

                                                <div id="donacion_dinero" style="display: none;">

                                                    <v-file-input v-model="addComprobanteDonante" accept="image/*"
                                                        label="Seleccionar Archivo"
                                                        @change="uploadImage"></v-file-input>

                                                    <v-spacer></v-spacer>
                                                </div>

                                                <v-row style="margin-left: 1%; margin-right: 1%;">
                                                    <v-select :items="prioridadDonacion1" v-model="addPrioridadDonacion"
                                                        elevation="2" class="edit_c" label="Prioridad" outlined>
                                                    </v-select>
                                                    <v-spacer></v-spacer>
                                                    <v-text-field label="Cantidad" type="number"
                                                        v-model="addCantidadDonacion"></v-text-field>
                                                </v-row>


                                                <v-text-field label="Observaciones" type="text"
                                                    v-model="addObsevacionDonacion"></v-text-field>
                                            </v-col>
                                        </v-form>
                                        <v-col class="col-3">
                                            <v-btn id="btn_ac" @click="addDonacion();comprobanteDonacion();">
                                                Añadir
                                            </v-btn>
                                        </v-col>
                                        </v-row>
                                        </v-col>
                                    </v-card-text>
                                </v-form>
                            </v-dialog>



                            <!--Dialogo edicion donacion -->
                            <v-dialog v-model="edit_donacion" width="50%">
                                <v-form ref="add" v-model="valid" lazy-validation>
                                    <!--Titulo-->
                                    <v-toolbar color="#c24b4b" fixed dark style="text-align: center;">
                                        <h3 style="margin-left: 20px;">Editar donación</h3>
                                        <v-spacer></v-spacer>
                                        <v-btn class="ma-2" text class="close" icon color="white lighten-2"
                                            @click="edit_donacion = false">
                                            <v-icon>mdi-close-thick</v-icon>
                                        </v-btn>
                                    </v-toolbar>
                                    <!--Contenido para crear empleado-->
                                    <v-card-text style="background-color: whitesmoke;">
                                        <br>
                                        <v-form>
                                            <v-col class="col-12" style="margin-top: 1%;">

                                                <v-select :items="tipoDonante" v-model="editTipoDonanteDonacion"
                                                    elevation="2" class="edit_c" label="Tipo donante" outlined>
                                                </v-select>
                                                <br>

                                                <v-autocomplete v-model="editEmpresaDonante"
                                                    v-if="editTipoDonanteDonacion=='Empresa'"
                                                    :no-data-text="($vuetify.noDataText = 'Empresa no encontrada.')"
                                                    :rules="[v => !!v || 'Por favor, ingrese la Empresa.']" required
                                                    :items="listadoEmpresa" solo outlined label="Empresa donante"
                                                    item-value="idEmpresa" item-text="nombreEmpresa"
                                                    item-text="tipoEmpresa" item-text="ciudadEmpresa">
                                                    <template v-slot:selection="data">
                                                        <v-avatar left>
                                                            <v-icon
                                                                style="color: #8c6060;">mdi-map-marker-multiple</v-icon>
                                                        </v-avatar>
                                                        <v-list-item-title>
                                                            <strong>{{ data.item.idEmpresa }}</strong> -
                                                            {{data.item.nombreEmpresa}} -
                                                            {{data.item.ciudadEmpresa}} - {{data.item.tipoEmpresa}}
                                                        </v-list-item-title>
                                                    </template>
                                                </v-autocomplete>



                                                <v-text-field label="Nombre" type="text"
                                                    v-if="editTipoDonanteDonacion=='Particular'"
                                                    v-model="editNombreDonanteDonacion"></v-text-field>
                                                <v-text-field label="N° Documento" type="text"
                                                    v-if="editTipoDonanteDonacion=='Particular'"
                                                    v-model="editDocumentoDonanteDonacion"></v-text-field>
                                                <v-text-field label="Celular" type="text"
                                                    v-if="editTipoDonanteDonacion=='Particular'"
                                                    v-model="editCelularDonanteDonacion"></v-text-field>
                                                <v-text-field label="País" type="text"
                                                    v-if="editTipoDonanteDonacion=='Particular'"
                                                    v-model="editPaisDonanteDonacion"></v-text-field>
                                                <v-text-field label="Departamento/Provincia" type="text"
                                                    v-if="editTipoDonanteDonacion=='Particular'"
                                                    v-model="editDepartamentoDonanteDonacion"></v-text-field>
                                                <v-text-field label="Ciudad" type="text"
                                                    v-if="editTipoDonanteDonacion=='Particular'"
                                                    v-model="editCiudadDonanteDonacion"></v-text-field>


                                                <v-text-field v-model="editDireccionDonanteDonacion" label="Dirección"
                                                    v-if="editTipoDonanteDonacion=='Particular'"
                                                    type="text"></v-text-field>






                                                <v-select :items="tipoDonacion1" v-model="editTipoDonacion"
                                                    elevation="2" class="edit_c" label="Tipo donación" outlined>
                                                </v-select>
                                                <br>
                                                <v-text-field label="¿Cual?" type="text" v-if="editTipoDonacion=='Otro'"
                                                    v-model="editDescripcionDonacion"></v-text-field>
                                                <v-text-field label="Detalles:" type="text"
                                                    v-if="editTipoDonacion=='Equipos'||editTipoDonacion=='Herramientas'||editTipoDonacion=='Materiales de construcción'||editTipoDonacion=='Medicamentos'||editTipoDonacion=='Utencilios'||editTipoDonacion=='Alimentos'||editTipoDonacion=='Prendas'"
                                                    v-model="editDescripcionDonacion"></v-text-field>
                                                <br>

                                                <v-row v-if="editTipoDonacion=='Prendas'"
                                                    style="margin-bottom: 1%; margin-left: 1%; margin-right: 1%;">
                                                    <br>
                                                    <v-select :items="GeneroDonacion" v-model="editGeneroDonacion"
                                                        elevation="2" class="edit_c" label="Genero de la prenda"
                                                        outlined>
                                                    </v-select>
                                                    <v-spacer></v-spacer>
                                                    <v-select :items="edadPrendas" v-model="editEdadDonacion"
                                                        elevation="2" class="edit_c" label="Edad prendas" outlined>
                                                    </v-select>
                                                </v-row>





                                                <v-file-input v-model="editComprobanteDonante" accept="image/*"
                                                    v-if="editTipoDonacion=='Dinero'" label="Seleccionar Archivo"
                                                    @change="uploadImage"></v-file-input>




                                                <v-row style="margin-left: 1%; margin-right: 1%;">
                                                    <v-select :items="prioridadDonacion1"
                                                        v-model="editPrioridadDonacion" elevation="2" class="edit_c"
                                                        label="Prioridad" outlined>
                                                    </v-select>
                                                    <v-spacer></v-spacer>
                                                    <v-text-field label="Cantidad" type="number"
                                                        v-model="editCantidadDonacion"></v-text-field>
                                                </v-row>


                                                <v-text-field label="Observaciones" type="text"
                                                    v-model="editObservacionDonacion"></v-text-field>
                                            </v-col>
                                        </v-form>
                                        <v-col class="col-3">
                                            <v-btn id="btn_ac" @click="refreshDonacion();">
                                                Actualizar
                                            </v-btn>
                                        </v-col>
                                        </v-row>
                                        </v-col>
                                    </v-card-text>
                                </v-form>
                            </v-dialog>


                            <!--Dialogo cursos para asignar a Brigadistas -->
                            <v-dialog v-model="add_cursos" width="500">
                                <v-form ref="add" v-model="valid" lazy-validation>
                                    <!--Titulo-->
                                    <v-toolbar color="#c24b4b" fixed dark style="text-align: center;">
                                        <h3 style="margin-left: 20px;">Añadir cursos</h3>
                                        <v-spacer></v-spacer>
                                        <v-btn class="ma-2" text class="close" icon color="white lighten-2"
                                            @click="add_cursos = false">
                                            <v-icon>mdi-close-thick</v-icon>
                                        </v-btn>
                                    </v-toolbar>
                                    <!--Contenido para crear cursos-->
                                    <v-card-text style="background-color: whitesmoke;">
                                        <br>
                                        <v-form>
                                            <v-col class="col-12" style="margin-top: 7px;">
                                                <v-text-field label="Nombre Curso" type="text"
                                                    v-model="addNombreCurso"></v-text-field>

                                                <v-date-picker v-model="fv_3" :model-config="modelConfig"
                                                    :attributes="attributes">
                                                    <template v-slot="{ inputValue, inputEvents }">
                                                        <v-text-field required readonly width="250" v-on="inputEvents"
                                                            label="Fecha inicio del curso" v-model="fv_3">
                                                        </v-text-field>
                                                    </template>
                                                </v-date-picker>
                                                <v-date-picker v-model="fv_4" :model-config="modelConfig"
                                                    :attributes="attributes">
                                                    <template v-slot="{ inputValue, inputEvents }">
                                                        <v-text-field required readonly width="250" v-on="inputEvents"
                                                            label="Fecha fin del curso" v-model="fv_4">
                                                        </v-text-field>
                                                    </template>
                                                </v-date-picker>

                                                <br>
                                                <v-text-field label="Lugar donde ser realizo" type="text"
                                                    v-model="addLugarCurso"></v-text-field>




                                                <v-text-field label="Intensidad Horaria" type="number"
                                                    v-model="addIntensidadHorariaCurso"></v-text-field>


                                            </v-col>
                                        </v-form>
                                        <v-col class="col-3">
                                            <v-btn id="btn_ac" @click="addCurso()">
                                                Añadir
                                            </v-btn>
                                        </v-col>
                                        </v-row>
                                        </v-col>
                                    </v-card-text>
                                </v-form>
                            </v-dialog>

                            <!--Dialogo para crear un nuevo evento -->
                            <v-dialog v-model="add_evento" width="40%">
                                <v-form ref="add" v-model="valid" lazy-validation>
                                    <!--Titulo-->
                                    <v-toolbar color="#c24b4b" fixed dark style="text-align: center;">
                                        <h3 style="margin-left: 20px;">Añadir nuevo evento</h3>
                                        <v-spacer></v-spacer>
                                        <v-btn class="ma-2" text class="close" icon color="white lighten-2"
                                            @click="add_evento = false">
                                            <v-icon>mdi-close-thick</v-icon>
                                        </v-btn>
                                    </v-toolbar>
                                    <!--Contenido para crear cursos-->
                                    <v-card-text style="background-color: whitesmoke;">
                                        <br>
                                        <v-form>
                                            <v-col class="col-12" style="margin-top: 3px;">
                                                <v-text-field label="Nombre Evento" type="text"
                                                    v-model="addNombreEvento"></v-text-field>

                                                <v-text-field label="Detalles del evento" type="text"
                                                    v-model="addDetalleEvento"></v-text-field>
                                                <v-text-field label="Lugar" type="text"
                                                    v-model="addLugarEvento"></v-text-field>



                                                <v-date-picker v-model="fv_5" :model-config="modelConfig"
                                                    :attributes="attributes">
                                                    <template v-slot="{ inputValue, inputEvents }">
                                                        <v-text-field required readonly width="250" v-on="inputEvents"
                                                            label="Fecha inicio del evento" v-model="fv_5">
                                                        </v-text-field>
                                                    </template>
                                                </v-date-picker>
                                                <v-date-picker v-model="fv_6" :model-config="modelConfig"
                                                    :attributes="attributes">
                                                    <template v-slot="{ inputValue, inputEvents }">
                                                        <v-text-field required readonly width="250" v-on="inputEvents"
                                                            label="Fecha fin del evento" v-model="fv_6">
                                                        </v-text-field>
                                                    </template>
                                                </v-date-picker>                                                

                                                        <v-text-field label="Horario" type="time" color="#c24b4b" style="color: #8d0303;"
                                                    v-model="addHorarioEvento"></v-text-field>
                                                    


                                            </v-col>
                                        </v-form>
                                        <v-col class="col-3">
                                            <v-btn id="btn_ac" @click="addEvento()">
                                                Añadir
                                            </v-btn>
                                        </v-col>
                                        </v-row>
                                        </v-col>
                                    </v-card-text>
                                </v-form>
                            </v-dialog>


                            <!--Dialogo para editar evento -->
                            <v-dialog v-model="edit_evento" width="40%">
                                <v-form ref="add" v-model="valid" lazy-validation>
                                    <!--Titulo-->
                                    <v-toolbar color="#c24b4b" fixed dark style="text-align: center;">
                                        <h3 style="margin-left: 20px;">Editar evento N° {{editIdEvento}}</h3>
                                        <v-spacer></v-spacer>
                                        <v-btn class="ma-2" text class="close" icon color="white lighten-2"
                                            @click="edit_evento = false">
                                            <v-icon>mdi-close-thick</v-icon>
                                        </v-btn>
                                    </v-toolbar>
                                    <!--Contenido para crear cursos-->
                                    <v-card-text style="background-color: whitesmoke;">
                                        <br>
                                        <v-form>
                                            <v-col class="col-12" style="margin-top: 3px;">
                                                <v-text-field label="Nombre Evento" type="text" 
                                                    v-model="editNombreEvento"></v-text-field>

                                                <v-text-field label="Detalles del evento" type="text" 
                                                 v-model="editDetalleEvento"></v-text-field>
                                                <v-text-field label="Lugar" type="text"
                                                    v-model="editLugarEvento"></v-text-field>



                                                <v-date-picker v-model="editfv_5" :model-config="modelConfig"
                                                    :attributes="attributes">
                                                    <template v-slot="{ inputValue, inputEvents }">
                                                        <v-text-field required readonly width="250" v-on="inputEvents"
                                                            label="Fecha inicio del evento" v-model="editfv_5">
                                                        </v-text-field>
                                                    </template>
                                                </v-date-picker>
                                                <v-date-picker v-model="editfv_6" :model-config="modelConfig"
                                                    :attributes="attributes">
                                                    <template v-slot="{ inputValue, inputEvents }">
                                                        <v-text-field required readonly width="250" v-on="inputEvents"
                                                            label="Fecha fin del evento" v-model="editfv_6">
                                                        </v-text-field>
                                                    </template>
                                                </v-date-picker>                                                

                                                        <v-text-field label="Horario" type="time" color="#c24b4b" style="color: #8d0303;"
                                                    v-model="editHorarioEvento"></v-text-field>
                                                    


                                            </v-col>
                                        </v-form>
                                        <v-col class="col-3">
                                            <v-btn id="btn_ac" @click="refreshEvento()">
                                                Actualizar
                                            </v-btn>
                                        </v-col>
                                        </v-row>
                                        </v-col>
                                    </v-card-text>
                                </v-form>
                            </v-dialog>


                            <!--Dialogo crear una nueva dotacion al inventario -->
                            <v-dialog v-model="add_dotacion" width="500">
                                <v-form ref="add" v-model="valid" lazy-validation>
                                    <!--Titulo-->
                                    <v-toolbar color="#c24b4b" fixed dark style="text-align: center;">
                                        <h3 style="margin-left: 20px;">Añadir dotación</h3>
                                        <v-spacer></v-spacer>
                                        <v-btn class="ma-2" text class="close" icon color="white lighten-2"
                                            @click="add_dotacion = false">
                                            <v-icon>mdi-close-thick</v-icon>
                                        </v-btn>
                                    </v-toolbar>
                                    <!--Contenido para crear cursos-->
                                    <v-card-text style="background-color: whitesmoke;">
                                        <br>
                                        <v-form>
                                            <v-col class="col-12" style="margin-top: 7px;">
                                                <v-text-field label="Nombre Dotación" type="text"
                                                    v-model="addNombreDotacion"></v-text-field>

                                                <v-autocomplete v-model="addEmpresaDotacion"
                                                    :no-data-text="($vuetify.noDataText = 'Empresa no encontrada.')"
                                                    :rules="[v => !!v || 'Por favor, ingrese la Empresa.']" required
                                                    :items="listadoEmpresa" solo outlined label="Empresa"
                                                    item-value="idEmpresa" item-text="nombreEmpresa"
                                                    item-text="ciudadEmpresa">
                                                    <template v-slot:selection="data">
                                                        <v-avatar left>
                                                            <v-icon
                                                                style="color: #8c6060;">mdi-map-marker-multiple</v-icon>
                                                        </v-avatar>
                                                        <v-list-item-title>
                                                            <strong>{{ data.item.idEmpresa }}</strong> -
                                                            {{data.item.nombreEmpresa}} - {{data.item.ciudadEmpresa}}
                                                        </v-list-item-title>
                                                    </template>
                                                </v-autocomplete>

                                                <v-select :items="tipoDotacion" v-model="addTipoDotacion" elevation="2"
                                                    class="edit_c" label="Tipo" outlined>
                                                </v-select>
                                                <br>


                                                <v-text-field label="Observacion: " type="text"
                                                    v-model="addObservacionDotacion"></v-text-field>


                                            </v-col>
                                        </v-form>
                                        <v-col class="col-3">
                                            <v-btn id="btn_ac" @click="addDotacion()">
                                                Añadir
                                            </v-btn>
                                        </v-col>
                                        </v-row>
                                        </v-col>
                                    </v-card-text>
                                </v-form>
                            </v-dialog>


                            <!--Dialogo editar una dotacion del inventario -->
                            <v-dialog v-model="edit_dotacion" width="500">
                                <v-form ref="add" v-model="valid" lazy-validation>
                                    <!--Titulo-->
                                    <v-toolbar color="#c24b4b" fixed dark style="text-align: center;">
                                        <h3 style="margin-left: 20px;">Editar dotación</h3>
                                        <v-spacer></v-spacer>
                                        <v-btn class="ma-2" text class="close" icon color="white lighten-2"
                                            @click="edit_dotacion = false">
                                            <v-icon>mdi-close-thick</v-icon>
                                        </v-btn>
                                    </v-toolbar>
                                    <!--Contenido para crear cursos-->
                                    <v-card-text style="background-color: whitesmoke;">
                                        <br>
                                        <v-form>
                                            <v-col class="col-12" style="margin-top: 7px;">

                                                <v-text-field label="Id Dotación" type="text" v-model="editIdDotacion"
                                                    disabled></v-text-field>
                                                <v-text-field label="Nombre Dotación" type="text"
                                                    v-model="editNombreDotacion"></v-text-field>

                                                <v-autocomplete v-model="editEmpresaDotacion"
                                                    :no-data-text="($vuetify.noDataText = 'Empresa no encontrada.')"
                                                    :rules="[v => !!v || 'Por favor, ingrese la Empresa.']" required
                                                    :items="listadoEmpresa" solo outlined label="Empresa"
                                                    item-value="idEmpresa" item-text="nombreEmpresa"
                                                    item-text="ciudadEmpresa">
                                                    <template v-slot:selection="data">
                                                        <v-avatar left>
                                                            <v-icon
                                                                style="color: #8c6060;">mdi-map-marker-multiple</v-icon>
                                                        </v-avatar>
                                                        <v-list-item-title>
                                                            <strong>{{ data.item.idEmpresa }}</strong> -
                                                            {{data.item.nombreEmpresa}} - {{data.item.ciudadEmpresa}}
                                                        </v-list-item-title>
                                                    </template>
                                                </v-autocomplete>

                                                <v-select :items="tipoDotacion" v-model="editTipoDotacion" elevation="2"
                                                    class="edit_c" label="Tipo" outlined>
                                                </v-select>
                                                <br>
                                                <v-select :items="estadoDotacion" v-model="editEstadoDotacion"
                                                    elevation="2" class="edit_c" label="Estado" outlined>
                                                </v-select>


                                                <v-text-field label="Observacion: " type="text"
                                                    v-model="editObservacionDotacion"></v-text-field>







                                            </v-col>
                                        </v-form>
                                        <v-col class="col-3">
                                            <v-btn id="btn_ac" @click="refreshDotacion()">
                                                Actualizar
                                            </v-btn>
                                        </v-col>
                                        </v-row>
                                        </v-col>
                                    </v-card-text>
                                </v-form>
                            </v-dialog>


                            <!--Dialogo para enviar al almacen la donacion -->
                            <v-dialog v-model="dialogoEnviarAlmacen" width="500">
                                <v-form ref="add" v-model="valid" lazy-validation>
                                    <!--Titulo-->
                                    <v-toolbar color="#c24b4b" fixed dark style="text-align: center;">
                                        <h3 style="margin-left: 20px;">Enviar la donación N° {{editarIdDonacion}} al
                                            siguiente almacén: </h3>
                                        <v-spacer></v-spacer>
                                        <v-btn class="ma-2" text class="close" icon color="white lighten-2"
                                            @click="dialogoEnviarAlmacen = false">
                                            <v-icon>mdi-close-thick</v-icon>
                                        </v-btn>
                                    </v-toolbar>
                                    <!--Contenido para crear empleado-->
                                    <v-card-text style="background-color: whitesmoke;">
                                        <br>
                                        <v-form>
                                            <v-col class="col-12" style="margin-top: 7px;">
                                                <v-text-field label="Id" type="number" v-model="editarIdDonacion"
                                                    disabled></v-text-field>
                                                <v-text-field label="Almacén" type="text"
                                                    v-model="addAlmacenDonacion"></v-text-field>




                                            </v-col>
                                        </v-form>
                                        <v-col class="col-3">
                                            <v-btn id="btn_ac" @click="enviarDonacion()">
                                                Enviar
                                            </v-btn>
                                        </v-col>
                                        </v-row>
                                        </v-col>
                                    </v-card-text>
                                </v-form>
                            </v-dialog>


                            <!--Dialogo para entregar la donacion -->
                            <v-dialog v-model="dialogoEntregarDonacion" width="500">
                                <v-form ref="add" v-model="valid" lazy-validation>
                                    <!--Titulo-->
                                    <v-toolbar color="#c24b4b" fixed dark style="text-align: center;">
                                        <h3 style="margin-left: 20px;">Entregar la donación N° {{editarIdDonacion}}
                                        </h3>
                                        <v-spacer></v-spacer>
                                        <v-btn class="ma-2" text class="close" icon color="white lighten-2"
                                            @click="dialogoEntregarDonacion = false">
                                            <v-icon>mdi-close-thick</v-icon>
                                        </v-btn>
                                    </v-toolbar>
                                    <!--Contenido para crear empleado-->
                                    <v-card-text style="background-color: whitesmoke;">
                                        <br>
                                        <v-form>
                                            <v-col class="col-12" style="margin-top: 7px;">
                                                <v-text-field label="Id" type="number" v-model="editarIdDonacion"
                                                    disabled></v-text-field>
                                                <v-text-field label="Donar a:" type="text"
                                                    v-model="addEntregarDonacion"></v-text-field>




                                            </v-col>
                                        </v-form>
                                        <v-col class="col-3">
                                            <v-btn id="btn_ac" @click="entregarDonacion()">
                                                Entregar
                                            </v-btn>
                                        </v-col>
                                        </v-row>
                                        </v-col>
                                    </v-card-text>
                                </v-form>
                            </v-dialog>


                            <!--Dialogo para entregar la donacion -->
                            <v-dialog v-model="dialogoMasInfoBrigadista" width="60%">
                                <v-form ref="add" v-model="valid" lazy-validation>
                                    <!--Titulo-->
                                    <v-toolbar  color="#c24b4b" fixed dark style="text-align: center;"  >
                                        <h3 style="margin-left: 20px;">Más información del brigadista </h3>
                                        <v-spacer></v-spacer>
                                        <v-btn class="ma-2" text class="close" icon color="white lighten-2"
                                            @click="dialogoMasInfoBrigadista = false">
                                            <v-icon>mdi-close-thick</v-icon>
                                        </v-btn>
                                    </v-toolbar>

                                    <!--Contenido para crear empleado-->
                                    <v-card-text style="background-color: whitesmoke;">

                                        <v-card-title>
                                            <h3>Brigadista: </h3> <spacebar style="width: 1%;"></spacebar>{{infoNombreBrigadista}}                                             
                                                                           
                                            
                                        </v-card-title>
                                        
                                        <div id="masInfoBrigadistaDiv">
                                            
                                            <v-app>
                                              <v-container>
                                                <v-card>
                                                    
                                                    <v-card-title>
                                                      <h5>Estado: {{infoEstadoBrigadista}}</h5>
                                                    </v-card-title>
                                                    
                                                  </v-card>
                                                <v-card>
                                                    
                                                  <v-card-title>
                                                    <h5>Contacto:</h5>
                                                  </v-card-title>
                                                  <v-card-text>
                                                    <v-form>
                                                      <v-row>
                                                        <v-col cols="6">
                                                          <v-text-field label="Pais" v-model="infoPaisBrigadista" readonly></v-text-field>
                                                        </v-col>
                                                        <v-col cols="6">
                                                          <v-text-field label="Departamento/Provincia" v-model="infoDepartamentoBrigadista" readonly></v-text-field>
                                                        </v-col>
                                                      </v-row>
                                                      <v-row>
                                                        <v-col cols="6">
                                                          <v-text-field label="Ciudad" v-model="infoCiudadBrigadista" readonly></v-text-field>
                                                        </v-col>
                                                        <v-col cols="6">
                                                          <v-text-field label="Dirección" v-model="infoDireccionBrigadista" readonly></v-text-field>
                                                        </v-col>
                                                      </v-row>
                                                      <v-row>
                                                        <v-col cols="6">
                                                          <v-text-field label="Celular" v-model="infoCelularBrigadista" readonly></v-text-field>
                                                        </v-col>
                                                        <v-col cols="6">
                                                          <v-text-field label="Correo electronico" v-model="infoCorreoBrigadista" readonly></v-text-field>
                                                        </v-col>
                                                      </v-row>
                                                      
                                                    </v-form>
                                                  </v-card-text>
                                                </v-card>

                                                <v-card>
                                                    <v-card-title>
                                                      <h5>Información Personal:</h5>
                                                    </v-card-title>
                                                    <v-card-text>
                                                      <v-form>
                                                        <v-row>
                                                          <v-col cols="6">
                                                            <v-text-field label="Cédula" v-model="infoIdBrigadista" readonly></v-text-field>
                                                          </v-col>
                                                          <v-col cols="6">
                                                            <v-text-field label="Nombre" v-model="infoNombreBrigadista" readonly></v-text-field>
                                                          </v-col>
                                                        </v-row>
                                                        <v-row>
                                                          <v-col cols="6">
                                                            <v-text-field label="Fecha Inicio" v-model="infoFechaInicioBrigadista" readonly></v-text-field>
                                                          </v-col>
                                                          <v-col cols="6">
                                                            <v-text-field label="Profesión" v-model="infoProfesionBrigadista" readonly></v-text-field>
                                                          </v-col>
                                                        </v-row>
                                                        <v-row>
                                                          <v-col cols="6">
                                                            <v-text-field label="Rol" v-model="infoRolBrigadista" readonly></v-text-field>
                                                          </v-col>
                                                          <v-col cols="6">
                                                            <v-text-field label="RH" v-model="infoRHBrigadista" readonly></v-text-field>
                                                          </v-col>
                                                        </v-row>

                                                        
                                                        
                                                      </v-form>
                                                    </v-card-text>
                                                  </v-card>
                                              </v-container>
                                            </v-app>
                                          </div>


                                        


                                </v-form>
                            </v-dialog>

                        </v-card-title>
                            <!--Dialogo para entregar la donacion -->
                            <v-dialog v-model="dialogoCursosBrigadista" width="60%">
                                <v-form ref="add" v-model="valid" lazy-validation>
                                    <!--Titulo-->
                                    <v-toolbar color="#c24b4b" fixed dark style="text-align: center;">
                                        <h3 style="margin-left: 20px;">Cursos realizados por el brigadista
                                            {{nombreBrigadistaCursos}} identificado con el documento N°
                                            {{idBrigadistaCursos}} </h3>
                                        <v-spacer></v-spacer>
                                        <v-btn class="ma-2" text class="close" icon color="white lighten-2"
                                            @click="dialogoCursosBrigadista = false">
                                            <v-icon>mdi-close-thick</v-icon>
                                        </v-btn>
                                    </v-toolbar>

                                    <!--Contenido para crear empleado-->
                                    <v-card-text style="background-color: whitesmoke;">

                                        <v-card-title>
                                            <h3>Cursos</h3>
                                            <spacebar style="width: 60%;"></spacebar>
                                            <v-text-field v-model="searchBrigadista" append-icon="mdi-magnify"
                                                label="Buscar" rounded outlined hide-details class="col-3"
                                                style="max-width: 350px;">
                                            </v-text-field>

                                            <v-btn-toggle rounded>

                                                <v-btn color="#BDECB6" @click="add_cursos=true;" id="tg_one"
                                                    style="box-shadow: 0 0 5px rgba(3, 33, 97, 0.2);"
                                                    title="Añadir curso">
                                                    <v-icon>mdi-plus</v-icon>
                                                </v-btn>
                                            </v-btn-toggle>
                                        </v-card-title>



                                        <v-data-table :headers="headersBrigadista"  :items="dessertsBrigadista"
                                            :search="searchBrigadista" id="tablaPanel" :header-style="headerStyle" 
                                            class="table-with-styled-header">

                                            <template v-slot:item.actions="{ item }">


                                                <v-tooltip bottom color="error">
                                                    <template v-slot:activator="{ on, attrs }">
                                                        <v-icon @click="deleteCurso(item)" class="btn_eliminar"
                                                            v-bind="attrs" v-on="on">
                                                            mdi-delete
                                                        </v-icon>
                                                    </template>
                                                    <span>Eliminar</span>
                                                </v-tooltip>

                                            </template>



                                            <template v-slot:no-data>
                                                <h3>No existen datos</h3>
                                            </template>

                                            <template v-slot:no-results>
                                                <h3> Lo sentimos, no hay resultado para '{{ searchBrigadista }}'.</h3>
                                            </template>

                                        </v-data-table>


                                </v-form>
                            </v-dialog>

                        </v-card-title>
                        <br />
                        <v-card-content style="width: 100%;" class="tablaHeaders" id="tablaHeaders">

                            <v-data-table :headers="headers" :items="desserts" :search="search" id="tablaPanel"
                                :header-style="headerStyle" class="elevation-1">

                                <!--Acciones-->
                                <template v-slot:item.actions="{ item }">

                                    <v-tooltip bottom color="primary">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-icon @click="masInfoBrigadista(item)" class="mr-2 btn_editar"
                                                v-bind="attrs" v-on="on">
                                                mdi mdi-eye-outline
                                            </v-icon>
                                        </template>
                                        <span>Más Información</span>
                                    </v-tooltip>
                                    <v-tooltip bottom color="primary">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-icon @click="cursosBrigadista(item)" class="mr-2 btn_editar"
                                                v-bind="attrs" v-on="on">
                                                mdi-certificate
                                            </v-icon>
                                        </template>
                                        <span>Cursos</span>
                                    </v-tooltip>
                                    <v-tooltip bottom color="primary">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-icon @click="crearCambioContrasenia(item)" class="mr-2 btn_editar"
                                                v-bind="attrs" v-on="on">
                                                mdi-key-variant
                                            </v-icon>
                                        </template>
                                        <span>Cambiar Contraseña</span>
                                    </v-tooltip>

                                    <v-tooltip bottom color="#ff6b09">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-icon @click="editBrigadista(item)" class="btn_suspender" v-bind="attrs"
                                                v-on="on">
                                                mdi-pencil
                                            </v-icon>
                                        </template>
                                        <span>Editar</span>
                                    </v-tooltip>

                                    <v-tooltip bottom color="error">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-icon @click="deleteBrigadista(item)" class="btn_eliminar" v-bind="attrs"
                                                v-on="on">
                                                mdi-delete
                                            </v-icon>
                                        </template>
                                        <span>Eliminar</span>
                                    </v-tooltip>

                                </template>

                                <template v-slot:item.actions1="{ item }">




                                    <v-tooltip bottom color="error">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-icon @click="deleteDonacion(item)" class="btn_eliminar" v-bind="attrs"
                                                v-on="on">
                                                mdi-delete
                                            </v-icon>
                                        </template>
                                        <span>Eliminar</span>
                                    </v-tooltip>

                                </template>

                                <template v-slot:item.actions2="{ item }">


                                    <v-tooltip bottom color="error">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-icon @click="deleteDonacion(item)" class="btn_eliminar" v-bind="attrs"
                                                v-on="on">
                                                mdi-delete
                                            </v-icon>
                                        </template>
                                        <span>Eliminar</span>
                                    </v-tooltip>

                                </template>


                                <template v-slot:item.actions3="{ item }">
                                    <v-tooltip bottom color="primary">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-icon @click="editDonacion(item);" class="mr-2 btn_editar" v-bind="attrs"
                                                v-on="on">
                                                mdi-pencil
                                            </v-icon>
                                        </template>
                                        <span>Editar</span>
                                    </v-tooltip>


                                    <v-tooltip bottom color="#ff6b09">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-icon @click="enviarAlmacen(item)" class="btn_suspender" v-bind="attrs"
                                                v-on="on">
                                                mdi-home-variant
                                            </v-icon>
                                        </template>
                                        <span>Enviar al almacén</span>
                                    </v-tooltip>

                                </template>

                                <template v-slot:item.actions4="{ item }">


                                    <v-tooltip bottom color="error">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-icon @click="estadoEntregado(item)" class="btn_eliminar" v-bind="attrs"
                                                v-on="on">
                                                mdi-send-check
                                            </v-icon>
                                        </template>
                                        <span>Entregado</span>
                                    </v-tooltip>

                                </template>

                                <template v-slot:item.actions5="{ item }">


                                    <v-tooltip bottom color="primary">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-icon @click="editEmpresa(item)" class="mr-2 btn_editar" v-bind="attrs"
                                                v-on="on">
                                                mdi-pencil
                                            </v-icon>
                                        </template>
                                        <span>Editar</span>
                                    </v-tooltip>

                                    <v-tooltip bottom color="error">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-icon @click="deleteEmpresa(item)" class="btn_eliminar" v-bind="attrs"
                                                v-on="on">
                                                mdi-delete
                                            </v-icon>
                                        </template>
                                        <span>Eliminar</span>
                                    </v-tooltip>

                                </template>

                                <template v-slot:item.actions6="{ item }">


                                    <v-tooltip bottom color="primary">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-icon @click="editDotacion(item)" class="mr-2 btn_editar" v-bind="attrs"
                                                v-on="on">
                                                mdi-pencil
                                            </v-icon>
                                        </template>
                                        <span>Editar</span>
                                    </v-tooltip>

                                    <v-tooltip bottom color="error">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-icon @click="deleteDotacion(item)" class="btn_eliminar" v-bind="attrs"
                                                v-on="on">
                                                mdi-delete
                                            </v-icon>
                                        </template>
                                        <span>Eliminar</span>
                                    </v-tooltip>

                                </template>

                                <template v-slot:item.actions7="{ item }">


                                    <v-tooltip bottom color="primary">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-icon @click="confirmarContrasenia(item)" class="mr-2 btn_editar"
                                                v-bind="attrs" v-on="on">
                                                mdi-check-all
                                            </v-icon>
                                        </template>
                                        <span>Confirmar cambio</span>
                                    </v-tooltip>



                                </template>


                                <template v-slot:item.actions8="{ item }">


                                    <v-tooltip bottom color="primary">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-icon @click="editEvento(item)" class="mr-2 btn_editar" v-bind="attrs"
                                                v-on="on">
                                                mdi-pencil
                                            </v-icon>
                                        </template>
                                        <span>Editar</span>
                                    </v-tooltip>

                                    <v-tooltip bottom color="error">
                                        <template v-slot:activator="{ on, attrs }">
                                            <v-icon @click="deleteEvento(item)" class="btn_eliminar" v-bind="attrs"
                                                v-on="on">
                                                mdi-delete
                                            </v-icon>
                                        </template>
                                        <span>Eliminar</span>
                                    </v-tooltip>



                                </template>


                                <template v-slot:no-data>
                                    <h3>No existen datos</h3>
                                </template>

                                <template v-slot:no-results>
                                    <h3> Lo sentimos, no hay resultado para '{{ search }}'.</h3>
                                </template>

                            </v-data-table>
                        </v-card-content>
                    </v-card-content>
                </v-card>
                </v-main>



            </div>
        </v-app>
        



        <!-- aqui continua el navbar, este muestra una lista con las clases que tenemos actualmente -->
        
                
        <v-navigation-drawer app
        right
        v-model="drawer"
        absolute
        temporary style="font-family: Arial, Helvetica, sans-serif; width: 25%; height: auto; margin-top: 3%;"
      >
      <v-list-item three-line>
        <v-list-item-content>

            <v-divider></v-divider>
            <v-list-item-title>
                <v-list-item-subtitle >
                    <h3 style="color: #b51c1c;"><b>Nombre:</b> {{nombreBrigadistaActual}}</h3>
                </v-list-item-subtitle style="color: black;">
                <v-divider></v-divider>
            </v-list-item-title>
            <v-list-item-subtitle style="color: rgb(46, 46, 46);">
                <h4><b>CC:</b> {{idBrigadistaActual}}</h4>
            </v-list-item-subtitle>
            <v-list-item-subtitle style="color: rgb(46, 46, 46);">
                <h4><b>Rol:</b> {{rolBrigadistaActual}}</h4>
            </v-list-item-subtitle>

            <v-list-item-subtitle style="color: rgb(46, 46, 46);">
                <h4><b>Profesión:</b> {{profesionBrigadistaActual}}</h4>
            </v-list-item-subtitle>

            <v-list-item-subtitle style="color: rgb(46, 46, 46);">
                <h4><b>Empresa:</b> {{empresaBrigadistaActual}}</h4>
            </v-list-item-subtitle>
            <v-list-item-subtitle style="color: rgb(46, 46, 46);">
                <h4><b>Fecha de Inicio:</b> {{fechaInicioBrigadistaActual}}</h4>
            </v-list-item-subtitle>
        </v-list-item-content>

        <v-list-item-avatar size="60"
            style="box-shadow: 0 0 5px rgba(3, 33, 97, 0.2); background: linear-gradient(to bottom right, #c63637, #f9635c); padding: 20px; margin-top: 20px;">
            <v-icon dark size="30">mdi-account</v-icon>
        </v-list-item-avatar>
    </v-list-item>    
        <v-divider></v-divider> 
        
            
            <v-list-item  rounded outlined>
                <v-btn @click="dialogoContrasenia = true" style="width: 100%;"> <v-icon>mdi-key</v-icon>
                    Cambiar contraseña</v-btn>
            </v-list-item style="color: black;">
            
          
    
          <template >
            <div class="pa-2">
              <v-btn block color="#c63637" id="logout" href="logout"><spam style="color: white;">Cerrar sesión</spam>
                
              </v-btn>
            </div>
          </template>
      </v-navigation-drawer>
      
      <v-navigation-drawer app
        left
        v-model="drawer1"
        absolute
        temporary style="font-family: Arial, Helvetica, sans-serif; width: 20%;"
      >
      
            
        <div id="logoAsobeecolMenu">

            <img src="/resources/LogoAsobeecol.png"
                style="margin-top: 15px; width: 98%; height: 80%; margin-right: 20%;" alt="">

        </div><br>
            <v-divider></v-divider>
            
            
            <v-list-item link href='/informe'>
                <!-- Nos redirecciona a la vista empleados -->
                <v-list-item-icon>
                    <v-icon>mdi-format-list-bulleted-triangle</v-icon> <!-- Hacemos uso de un icon -->
                </v-list-item-icon>
                <v-list-item-content>
                    <v-list-item-title>
                        <a id="lblInforme">Informes</a>
                    </v-list-item-title> <!-- Mandamos el nombre de la vista -->
                </v-list-item-content>
            </v-list-item>

            <v-list-item link href='/gestion'>
                <!-- Nos redirecciona a la vista solicitud -->
                <v-list-item-icon>
                    <v-icon>mdi-cogs</v-icon> <!-- Hacemos uso de un icon -->
                </v-list-item-icon>
                <v-list-item-content>
                    <v-list-item-title>
                        <a id="lblSolicitud">Gestion</a>
                    </v-list-item-title> <!-- Mandamos el nombre de la vista -->
                </v-list-item-content>
            </v-list-item>
            
                
              
      </v-navigation-drawer>
      
                
              

    </div>




    <!-- Hacemos uso de los cdn -->
    <script src="https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.20.0/axios.js"
        integrity="sha512-nqIFZC8560+CqHgXKez61MI0f9XSTKLkm0zFVm/99Wt0jSTZ7yeeYwbzyl0SGn/s8Mulbdw+ScCG41hmO2+FKw=="
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.0.2/dist/sweetalert2.all.min.js"></script>

    <!-- 1. Link Vue Javascript -->
    <script src='https://unpkg.com/vue/dist/vue.js'></script>

    <!-- 2. Link VCalendar Javascript (Plugin automatically installed) -->
    <script src='https://unpkg.com/v-calendar'></script>

    <script>
        // Datos de usuario en sesion
        let url = 'http://localhost:3000/api/datos/';

        //------------------------------Brigadistas-------------------------------

        //retorna todos los brigadistas
        let url1 = 'http://localhost:3000/api/brigadistas/';
        //cambia la contraseña del brigadista
        let url2 = 'http://localhost:3000/api/cambiarcontrasenia/';
        //añade un nuevo brigadista
        let url3 = 'http://localhost:3000/api/addbrigadista/';
        //edita un brigadista
        let url4 = 'http://localhost:3000/api/editbrigadista/';
        //elimina un brigadista
        let url5 = 'http://localhost:3000/api/deletebrigadista/';
        //retorna todos los brigadistas que quieren cambiar contraseña
        let url6 = 'http://localhost:3000/api/listabrigadistacambio/';
        //cambia la contraseña
        let url7 = 'http://localhost:3000/api/passwordbrigadistacambio/';
        // da el numero de brigadistas activos e inactivos
        let url8 ='http://localhost:3000/api/estadobrigadistacontador/';

        //-----------------------------------empresas------------------------------------
        let url20 = 'http://localhost:3000/api/empresa/';
        let url21 = 'http://localhost:3000/api/addempresa/';
        let url22 = 'http://localhost:3000/api/editempresa/';
        let url23 = 'http://localhost:3000/api/deleteempresa/';
        let url24 = 'http://localhost:3000/api/searchempresa/';


        //--------------------------Profesiones---------------------------------------
        let url30 = 'http://localhost:3000/api/profesion/';

        //------------------------------Roles-----------------------------------------
        let url40 = 'http://localhost:3000/api/rol/';

        //------------------------------Donaciones-----------------------------------------
        let url50 = 'http://localhost:3000/api/donacion/';
        let url51 = 'http://localhost:3000/api/adddonacion/';
        let url52 = 'http://localhost:3000/api/estadodonacion/';
        let url53 = 'http://localhost:3000/api/enviardonacionalmacen/';
        let url54 = 'http://localhost:3000/api/entregardonacion/';
        let url55 = 'http://localhost:3000/api/deletedonacion/';
        let url56 = 'http://localhost:3000/api/editdonacion/';
        let url57 = 'http://localhost:3000/api/comprobantedonacion/';
        let url58 = 'http://localhost:3000/api/estadodonacioncontador/';

        //--------------------------------Cursos-----------------------------------------------
        let url60 = 'http://localhost:3000/api/cursos/';
        let url61 = 'http://localhost:3000/api/cursosbrigadista/';
        let url62 = 'http://localhost:3000/api/addcursosbrigadista/';
        let url63 = 'http://localhost:3000/api/deletecursosbrigadista/';

        //--------------------------------Dotacion-----------------------------------------------
        let url70 = 'http://localhost:3000/api/dotacion/';
        let url71 = 'http://localhost:3000/api/adddotacion/';
        let url72 = 'http://localhost:3000/api/editdotacion/';
        let url73 = 'http://localhost:3000/api/deletedotacion/';
        let url74 = 'http://localhost:3000/api/dotacionfiltro/';

        //--------------------------Eventos---------------------------------------
        let url80 = 'http://localhost:3000/api/eventos/';
        let url81 = 'http://localhost:3000/api/addeventos/';
        let url82 = 'http://localhost:3000/api/editevento/';
        let url83 = 'http://localhost:3000/api/deleteevento/';
        let url84 = 'http://localhost:3000/api/estadoeventoscontador/';
        











        //Creación del proyecto de Vue
        new Vue({
            el: '#gestion',
            //Creación de Vuetify
            vuetify: new Vuetify(),
            data() {

                return {
                    //inicializamos esta funcion en false para que cuando se haga clic en el navbar este se pueda desplegar
                    drawer: false,
                    drawer1:false,
                    //Datos usuario en sesión 
                    estado1: ['Recibida', 'En Almacén', 'Enviada'],
                    estadoDotacion: ['Disponible', 'Mantenimiento', 'Ocupado'],
                    tipoDonacion1: ['Alimentos', 'Dinero', 'Equipos', 'Herramientas', 'Materiales de construcción', 'Medicamentos', 'Prendas', 'Utencilios', 'Otro'],
                    tipoDotacion: ['Botiquín', 'Camilla', 'Martillo', 'Radio de comunicación', 'Uniforme'],
                    tipoRH: ['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-'],
                    prioridadDonacion1: ['Urgente', 'Alta', 'Media', 'Baja'],
                    tipoDonante: ['Empresa', 'Particular'],
                    tipoEmpresa: ['Privada', 'Publica'],
                    GeneroDonacion: ['Femenino', 'Masculino'],
                    edadPrendas: ['0-10 años', '11-20 años', '21-90 años'],
                    listadoBrigadista: [],
                    listadoEmpresa: [],
                    listadoProfesion: [],
                    listadoRol: [],
                    search: '',
                    searchBrigadista: '',
                    listado: '',
                    listadoDonacion: '',
                    valid: true,
                    secondDisabled: true,
                    //agregar donacion
                    addTipoDonanteDonacion: null,
                    addTipoDonacion: null,
                    addNombreDonanteDonacion: null,
                    addDocumentoDonanteDonacion: null,
                    addCelularDonanteDonacion: null,
                    addPaisDonanteDonacion: null,
                    addDepartamentoDonanteDonacion: null,
                    addCiudadDonanteDonacion: null,
                    addDireccionDonanteDonacion: null,
                    addTipoEmpresaDonacion: null,
                    addEmpresaDonante: null,
                    //editar donacion
                    editTipoDonanteDonacion: null,
                    editTipoDonacion: null,
                    editNombreDonanteDonacion: null,
                    editDocumentoDonanteDonacion: null,
                    editCelularDonanteDonacion: null,
                    editPaisDonanteDonacion: null,
                    editDepartamentoDonanteDonacion: null,
                    editCiudadDonanteDonacion: null,
                    editDireccionDonanteDonacion: null,
                    editTipoEmpresaDonacion: null,
                    editEmpresaDonante: null,
                    listCambioContrasenia: '',
                    //editar eventos
                    editNombreEvento: null,
                    editfv_5: null,
                    editfv_6: null,
                    editDetalleEvento: null,
                    editLugarEvento: null,
                    editHorarioEvento: null,
                    editIdBrigadista: null,


                    //Creacion de dialogos para la aparicion
                    dialogoContraseniaUser: false,
                    dialogoContrasenia: false,
                    dialogoEnviarAlmacen: false,
                    dialogoEntregarDonacion: false,
                    dialogoCursosBrigadista: false,
                    dialogoMasInfoBrigadista:false,
                    add_brigadista: false,
                    add_empresa: false,
                    add_dotacion: false,
                    edit_empresa: false,
                    edit_dotacion: false,
                    edit_brigadista: false,
                    add_donacion: false,
                    add_evento: false,
                    add_cursos: false,
                    edit_donacion: false,
                    edit_evento:false,
                    // Fecha actual
                    fechaActual: new Date().toISOString('es-CO').split('T')[0],
                    //Datos Usuario en sesion
                    idBrigadistaActual: null,
                    nombreBrigadistaActual: null,
                    profesionBrigadistaActual: null,
                    empresaBrigadistaActual: null,
                    fechaInicioBrigadistaActual: null,
                    brigadistaActivoContador:null,
                    brigadistaInactivoContador:null,
                    donacionEnAlmacenContador:null,
                    donacionEntregadaContador:null,
                    donacionRecibidaContador:null,
                    eventospasadosContador:null,
                    eventosProximosContador:null,
                    eventosEnCursoContador:null,
                    
                    //Datos Tabla
                    headers: [{}],
                    headers0: [{ text: 'Fecha Inicio', align: 'start',value: 'fechaInicioBrigadista' },
                    { text: 'N° Documento',  value: 'idBrigadista' }, // Brigadistas  
                    
                    { text: 'Nombre Completo', value: 'nombreBrigadista' },
                    { text: 'e-mail', value: 'emailBrigadista' },
                    { text: 'Celular', value: 'celularBrigadista' },                  
                    { text: 'Empresa', value: 'empresaBrigadista' },
                    { text: 'Acciones', value: 'actions', sortable: false }],

                    headers1: [{ text: 'Id', align: 'start', value: 'idDonacion' }, // Donaciones  Recibidas                  
                    { text: 'Fecha de Entrada', value: 'fechaEntregaDonacion' },
                    { text: 'Donante', value: 'nombreDonanteDonacion' },
                    { text: 'Tipo', value: 'tipoDonacion' },
                    { text: 'cantidad', value: 'cantidadDonacion' },
                    { text: 'Prioridad', value: 'prioridadDonacion' },
                    { text: 'Descripción', value: 'descripcionDonacion' },
                    { text: 'Estado', value: 'estadoDonacion' },
                    { text: 'Brigadista a cargo', value: 'brigadistaDonacion' },
                    { text: 'Acciones', value: 'actions3', sortable: false }],

                    headers2: [{ text: 'Id', align: 'start', value: 'idDonacion' }, // Donaciones                    
                    { text: 'Fecha de entrada', value: 'fechaEntregaDonacion' },
                    { text: 'Donante', value: 'nombreDonanteDonacion' },
                    { text: 'Tipo', value: 'tipoDonacion' },
                    { text: 'cantidad', value: 'cantidadDonacion' },
                    { text: 'Prioridad', value: 'prioridadDonacion' },
                    { text: 'Descripción', value: 'descripcionDonacion' },
                    { text: 'Brigadista a cargo', value: 'brigadistaDonacion' },
                    { text: 'Acciones', value: '', sortable: false }],

                    headers3: [{ text: 'NIT', align: 'start', value: 'idEmpresa' }, // Empresas                    
                    { text: 'Nombre', value: 'nombreEmpresa' },
                    { text: 'Tipo', value: 'tipoEmpresa' },
                    { text: 'Celular', value: 'celularEmpresa' },
                    { text: 'País', value: 'paisEmpresa' },
                    { text: 'Departamento/Provincia', value: 'departamentoEmpresa' },
                    { text: 'Ciudad', value: 'ciudadEmpresa' },
                    { text: 'Dirección', value: 'direccionEmpresa' },
                    { text: 'Acciones', value: 'actions5', sortable: false }],

                    headers4: [{ text: 'Id', align: 'start', value: 'idDotacion' }, // Dotaciones                    
                    { text: 'Nombre', value: 'nombreDotacion' },
                    { text: 'Empresa', value: 'empresaDotacion' },
                    { text: 'Tipo', value: 'tipoDotacion' },
                    { text: 'Estado', value: 'estadoDotacion' },
                    { text: 'Observación', value: 'observacionDotacion' },
                    { text: 'Acciones', value: 'actions6', sortable: false }],

                    headers5: [{ text: 'Id', align: 'start', value: 'idDonacion' }, // Donaciones  Entregadas                  
                    { text: 'Fecha de entrada', value: 'fechaEntregaDonacion' },
                    { text: 'Donante', value: 'nombreDonanteDonacion' },
                    { text: 'Tipo', value: 'tipoDonacion' },
                    { text: 'cantidad', value: 'cantidadDonacion' },
                    { text: 'Prioridad', value: 'prioridadDonacion' },
                    { text: 'Descripción', value: 'descripcionDonacion' },
                    { text: 'Estado', value: 'estadoDonacion' },
                    { text: 'Brigadista a cargo', value: 'brigadistaDonacion' },
                    { text: 'Donado a', value: 'donadoDonacion' },
                    { text: 'Fecha de salida', value: 'fechaSalidaDonacion' },
                    { text: 'Acciones', value: 'actions2', sortable: false }],

                    headers6: [{ text: 'Id', align: 'start', value: 'idDonacion' }, // Donaciones  en almacen                  
                    { text: 'Fecha de Entrada', value: 'fechaEntregaDonacion' },
                    { text: 'Donante', value: 'nombreDonanteDonacion' },
                    { text: 'Tipo', value: 'tipoDonacion' },
                    { text: 'cantidad', value: 'cantidadDonacion' },
                    { text: 'Prioridad', value: 'prioridadDonacion' },
                    { text: 'Descripción', value: 'descripcionDonacion' },
                    { text: 'Estado', value: 'estadoDonacion' },
                    { text: 'Almacén', value: 'almacenDonacion' },
                    { text: 'Brigadista a cargo', value: 'brigadistaDonacion' },
                    { text: 'Acciones', value: 'actions4', sortable: false }],


                    headers7: [                                      // Dotaciones                    
                        { text: 'Nombre', value: 'nombreDotacionFiltro' },
                        { text: 'Empresa', value: 'empresaDotacionFiltro' },
                        { text: 'Tipo', value: 'tipoDotacionFiltro' },
                        { text: 'Estado', value: 'estadoDotacionFiltro' },
                        { text: 'Cantidad', value: 'cantidadDotacionFiltro' }],

                    headers8: [{ text: 'N° Documento', align: 'start', value: 'idBrigadista' }, // Brigadistas  
                    { text: 'Fecha Inicio', value: 'fechaInicioBrigadista' },
                    { text: 'Estado', value: 'estadoBrigadista' },
                    { text: 'Nombre Completo', value: 'nombreBrigadista' },
                    { text: 'e-mail', value: 'emailBrigadista' },
                    { text: 'Celular', value: 'celularBrigadista' },
                    { text: 'Dirección', value: 'direccionBrigadista' },
                    { text: 'RH', value: 'rhBrigadista' },
                    { text: 'Profesión', value: 'profesionBrigadista' },
                    { text: 'Rol', value: 'rolBrigadista' },
                    { text: 'Pais', value: 'paisBrigadista' },
                    { text: 'Departamento', value: 'departamentoBrigadista' },
                    { text: 'Ciudad', value: 'ciudadBrigadista' },
                    { text: 'Empresa', value: 'empresaBrigadista' },
                    { text: 'Acciones', value: 'actions7', sortable: false }],

                    headers9: [{ text: 'ID', align: 'start', value: 'idEvento' }, // Eventos  
                    { text: 'Nombre', value: 'nombreEvento' },
                    { text: 'Descripción', value: 'detallesEvento' },
                    { text: 'Lugar', value: 'lugarEvento' },
                    { text: 'Horario', value: 'horarioEvento' },
                    { text: 'Fecha Inicio', value: 'fechaInicioEvento' },
                    { text: 'Fecha Fin', value: 'fechaFinEvento' },
                    { text: 'Acciones', value: 'actions8', sortable: false }],




                    headersBrigadista: [{}],

                    headersBrigadista0: [{ text: 'Id', align: 'start', value: 'idCurso' },  // Cursos de Brigadista                    
                    { text: 'Fecha inicio', value: 'fechaInicioCurso' },
                    { text: 'Fecha fin', value: 'fechaFinCurso' },
                    { text: 'Nombre', value: 'nombreCurso' },
                    { text: 'Lugar', value: 'lugarCurso' },
                    { text: 'Intensidad Horaria', value: 'intensidadHorariaCurso' },
                    { text: 'Acciones', value: 'actions', sortable: false }],

                    dessertsBrigadista: [{
                        // cursos
                        nombreCurso: null,
                        fechaInicioCurso: null,
                        fechaFinCurso: null,
                        lugarCurso: null,
                        intensidadHorariaCurso: null,
                        idCurso: null
                    }],


                    desserts: [
                        {

                            //Brigadista
                            idBrigadista: null,
                            nombreBrigadista: null,
                            profesionBrigadista: null,
                            emailBrigadista: null,
                            fechaInicioBrigadista: null,
                            rolBrigadista: null,
                            estadoBrigadista: null,
                            empresaBrigadista: null,
                            paisBrigadista: null,
                            departamentoBrigadista: null,
                            ciudadBrigadista: null,
                            direccionBrigadista: null,
                            rhBrigadista: null,
                            celularBrigadista: null,

                            //Donacion
                            idDonacion: null,
                            fechaEntregaDonacion: null,
                            nombreDonanteDonacion: null,
                            tipoDonanteDonacion: null,
                            TipoEmpresaDonacion: null,
                            tipoDonacion: null,
                            prioridadDonacion: null,
                            cantidadDonacion: null,
                            descripcionDonacion: null,
                            brigadistaDonacion: null,
                            estadoDonacion: null,
                            almacenDonacion: null,

                            //Dotación
                            idDotacion: null,
                            nombreDotacion: null,
                            empresaDotacion: null,
                            tipoDotacion: null,
                            estadoDotacion: null,
                            observacionDotacion: null,
                            idEmpresaDotacion: null,

                            nombreDotacionFiltro: null,
                            empresaDotacionFiltro: null,
                            tipoDotacionFiltro: null,
                            estadoDotacionFiltro: null,
                            cantidadDotacionFiltro: null,

                            //evento
                            idEvento: null,
                            nombreEvento: null,
                            lugarEvento: null,
                            fechaInicioEvento: null,
                            fechaFinEvento: null,
                            detallesEvento: null,
                            horarioEvento: null,






                        },
                    ],




                    //Formato de fechasurl24
                    modelConfig: {
                        type: 'string',
                        mask: 'YYYY-MM-DD'
                    },



                }

            },
            watch: {


                listado(value) {
                    if (value == 'Solicitudes Recuperación Cuenta') {

                        let rol = this.rolBrigadistaActual;
                        let empresa = this.empresaBrigadistaActual;
                        document.getElementById("div_brigadistas").style.display = "block";
                        document.getElementById("div_donaciones").style.display = "none";
                        document.getElementById("div_dotaciones").style.display = "none";
                        document.getElementById("div_eventos").style.display = "none";


                        this.headers = this.headers8;
                        this.datosUsuario();
                        axios.get(url6 + rol + '/' + empresa)
                            .then(response => {
                                let datos = response.data;
                                for (var i in datos) {

                                    this.desserts.push({

                                        idBrigadista: datos[i].idBrigadista,
                                        nombreBrigadista: datos[i].nombreBrigadista,
                                        profesionBrigadista: datos[i].profesion,
                                        emailBrigadista: datos[i].email,
                                        fechaInicioBrigadista: new Date(datos[i].fechaInicio).toISOString('es-CO').split('T')[0],
                                        estadoBrigadista: datos[i].estado,
                                        rolBrigadista: datos[i].nombreRol,
                                        idRolBrigadista: datos[i].idRol,
                                        empresaBrigadista: datos[i].nombreEmpresa,
                                        idEmpresaBrigadista: datos[i].idEmpresa,
                                        paisBrigadista: datos[i].pais,
                                        departamentoBrigadista: datos[i].departamento,
                                        ciudadBrigadista: datos[i].ciudad,
                                        direccionBrigadista: datos[i].direccion,
                                        rhBrigadista: datos[i].rh,
                                        celularBrigadista: datos[i].celular,
                                        nuevaPassword: datos[i].nuevaPassword,


                                    });
                                }

                            });

                    }
                },
                addTipoDonanteDonacion(value) {
                    if (value == 'Empresa') {
                        document.getElementById("addTipoDonanteEmpresa").style.display = "block";
                        document.getElementById("addTipoDonanteParticular").style.display = "none";


                    } else {

                        document.getElementById("addTipoDonanteEmpresa").style.display = "none";
                        document.getElementById("addTipoDonanteParticular").style.display = "block";

                    }
                },
                editTipoDonanteDonacion(value) {
                    if (value == 'Empresa') {
                        document.getElementById("editTipoDonanteEmpresa").style.display = "block";
                        document.getElementById("editTipoDonanteParticular").style.display = "none";


                    } else if (value == 'Particular') {

                        document.getElementById("editTipoDonanteEmpresa").style.display = "none";
                        document.getElementById("editTipoDonanteParticular").style.display = "block";

                    }
                },

                addTipoDonacion(value) {
                    if (value == 'Prendas') {
                        document.getElementById("donacion_prendas").style.display = "Block";
                        document.getElementById("donacion_dinero").style.display = "none";
                    }
                    else if (value == 'Dinero') {
                        document.getElementById("donacion_dinero").style.display = "block";
                        document.getElementById("donacion_prendas").style.display = "none";
                    }
                    else {
                        document.getElementById("donacion_prendas").style.display = "none";
                        document.getElementById("donacion_dinero").style.display = "none";
                    }
                },

                addEmpresaDonante(value) {
                    if (value = !null && this.addTipoDonanteDonacion == 'Empresa') {

                        let id = this.addEmpresaDonante;
                        axios.get(url24 + id).then(response => {
                            let datos = response.data;

                            this.addNombreDonanteDonacion = datos[0].nombreEmpresa;
                            this.addDocumentoDonanteDonacion = datos[0].idEmpresa;
                            this.addCelularDonanteDonacion = datos[0].celular;
                            this.addPaisDonanteDonacion = datos[0].pais;
                            this.addDepartamentoDonanteDonacion = datos[0].departamento;
                            this.addCiudadDonanteDonacion = datos[0].ciudad;
                            this.addDireccionDonanteDonacion = datos[0].direccion;




                        });

                    }

                },

                editEmpresaDonante(value) {
                    if (value = !null && this.editTipoDonanteDonacion == 'Empresa') {

                        let id = this.editEmpresaDonante;
                        axios.get(url24 + id).then(response => {
                            let datos = response.data;

                            this.editNombreDonanteDonacion = datos[0].nombreEmpresa;
                            this.editDocumentoDonanteDonacion = datos[0].idEmpresa;
                            this.editCelularDonanteDonacion = datos[0].celular;
                            this.editPaisDonanteDonacion = datos[0].pais;
                            this.editDepartamentoDonanteDonacion = datos[0].departamento;
                            this.editCiudadDonanteDonacion = datos[0].ciudad;
                            this.editDireccionDonanteDonacion = datos[0].direccion;




                        });

                    }


                },
            },

            //Nos trae todos los datos de la API y nos las llena en cada variable
            created() {
                this.datosUsuario();
            },
            methods: {

                // Extrae los datos del usuario en sesión para aplicar los filtros pertinentes.             
                datosUsuario: function () {

                    axios.get(url)
                        .then(response => {
                            let datos = response.data;
                            this.idBrigadistaActual = datos[0].idBrigadista;
                            this.nombreBrigadistaActual = datos[0].nombreBrigadista;
                            this.fechaInicioBrigadistaActual = new Date(datos[0].fechaInicio).toISOString('es-CO').split('T')[0];
                            this.profesionBrigadistaActual = datos[0].profesion;
                            this.empresaBrigadistaActual = datos[0].nombreEmpresa;
                            this.ciudadEmpresaBrigadistaActual = datos[0].ciudad;
                            this.passwordBrigadistaActual = datos[0].password;
                            this.rolBrigadistaActual = datos[0].nombreRol;

                            this.listado_roles();
                            this.listado_empresas();


                        });

                        axios.get(url84).then(response => {
                            let datos = response.data;
                            this.eventosEnCursoContador = datos[2].contador;
                            this.eventospasadosContador = datos[0].contador; 
                            this.eventosProximosContador = datos[1].contador;                         
                        });

                    axios.get(url8).then(response => {
                            let datos = response.data;
                            this.brigadistaActivoContador = datos[0].cantidad;
                            this.brigadistaInactivoContador = datos[1].cantidad;                         


                        });
                        

                        axios.get(url58).then(response => {
                            let datos = response.data;
                            this.donacionRecibidaContador = datos[2].cantidad;
                            this.donacionEnAlmacenContador = datos[0].cantidad; 
                            this.donacionEntregadaContador = datos[1].cantidad;                         
                        });

                        



                        
                },

                listaDatos: function () {

                    this.desserts.splice(0);
                    if (this.listado == 'Brigadistas') {
                        let rol = this.rolBrigadistaActual;
                        this.listadoDonacion = null;
                        let empresa = this.empresaBrigadistaActual;
                        document.getElementById("div_brigadistas").style.display = "block";
                        document.getElementById("div_donaciones").style.display = "none";
                        document.getElementById("div_dotaciones").style.display = "none";
                        document.getElementById("div_eventos").style.display = "none";

                        this.headers = this.headers0;
                        this.datosUsuario();
                        axios.get(url1 + rol + '/' + empresa)
                            .then(response => {
                                let datos = response.data;
                                for (var i in datos) {

                                    this.desserts.push({

                                        idBrigadista: datos[i].idBrigadista,
                                        nombreBrigadista: datos[i].nombreBrigadista,
                                        profesionBrigadista: datos[i].profesion,
                                        emailBrigadista: datos[i].email,
                                        fechaInicioBrigadista: new Date(datos[i].fechaInicio).toISOString('es-CO').split('T')[0],
                                        estadoBrigadista: datos[i].estado,
                                        rolBrigadista: datos[i].nombreRol,
                                        idRolBrigadista: datos[i].idRol,
                                        empresaBrigadista: datos[i].nombreEmpresa,
                                        idEmpresaBrigadista: datos[i].idEmpresa,
                                        paisBrigadista: datos[i].pais,
                                        departamentoBrigadista: datos[i].departamento,
                                        ciudadBrigadista: datos[i].ciudad,
                                        direccionBrigadista: datos[i].direccion,
                                        rhBrigadista: datos[i].rh,
                                        celularBrigadista: datos[i].celular,


                                    });
                                }

                            });



                    }

                    else if (this.listado == 'Eventos') {
                        document.getElementById("div_brigadistas").style.display = "none";
                        document.getElementById("div_donaciones").style.display = "none";
                        document.getElementById("div_dotaciones").style.display = "none";
                        document.getElementById("div_eventos").style.display = "block";
                        this.datosUsuario();
                        this.headers = this.headers9;
                        axios.get(url80).then(response => {
                            let datos = response.data;
                            for (var i in datos) {
                                this.desserts.push({

                                    idEvento: datos[i].idEvento,
                                    nombreEvento: datos[i].nombreEvento,
                                    lugarEvento: datos[i].lugarEvento,
                                    fechaInicioEvento: new Date(datos[i].fechaInicio).toISOString('es-CO').split('T')[0],
                                    fechaFinEvento: new Date(datos[i].fechaFin).toISOString('es-CO').split('T')[0],
                                    detallesEvento: datos[i].detalleEvento,
                                    horarioEvento: datos[i].horarioEvento,


                                });
                            }

                        });

                    }



                    else if (this.listado == 'Donaciones') {
                        document.getElementById("div_brigadistas").style.display = "none";
                        document.getElementById("div_donaciones").style.display = "block";
                        document.getElementById("div_dotaciones").style.display = "none";
                        document.getElementById("div_eventos").style.display = "none";

                        this.datosUsuario();
                        if (this.listadoDonacion == 'Todas') {
                            this.headers = this.headers5;
                            axios.get(url50).then(response => {
                                let datos = response.data;
                                for (var i in datos) {
                                    this.desserts.push({

                                        idDonacion: datos[i].idDonacion,
                                        fechaEntregaDonacion: new Date(datos[i].fechaEntrega).toISOString('es-CO').split('T')[0],
                                        nombreDonanteDonacion: datos[i].nombreDonante,
                                        tipoDonacion: datos[i].tipo,
                                        prioridadDonacion: datos[i].prioridad,
                                        cantidadDonacion: datos[i].cantidad,
                                        descripcionDonacion: datos[i].descripcion,
                                        brigadistaDonacion: datos[i].nombreBrigadista,
                                        estadoDonacion: datos[i].estado,
                                        donadoDonacion: datos[i].donado,
                                        fechaSalidaDonacion: new Date(datos[i].fechaSalida).toISOString('es-CO').split('T')[0]

                                    });
                                }

                            });
                        }

                        else if (this.listadoDonacion == 'Recibida') {
                            this.headers = this.headers1;
                            axios.get(url52 + this.listadoDonacion).then(response => {
                                let datos = response.data;
                                for (var i in datos) {
                                    this.desserts.push({

                                        idDonacion: datos[i].idDonacion,
                                        fechaEntregaDonacion: new Date(datos[i].fechaEntrega).toISOString('es-CO').split('T')[0],
                                        nombreDonanteDonacion: datos[i].nombreDonante,
                                        tipoDonacion: datos[i].tipo,
                                        prioridadDonacion: datos[i].prioridad,
                                        cantidadDonacion: datos[i].cantidad,
                                        descripcionDonacion: datos[i].descripcion,
                                        observacionesDonacion: datos[i].observaciones,
                                        brigadistaDonacion: datos[i].nombreBrigadista,
                                        estadoDonacion: datos[i].estado,
                                        tipoDonante: datos[i].tipoDonante,
                                        nombreDonante: datos[i].nombreDonante,
                                        documentoDonante: datos[i].documentoDonante,
                                        celularDonante: datos[i].celularDonante,
                                        paisDonante: datos[i].paisDonante,
                                        departamentoDonante: datos[i].departamentoDonante,
                                        ciudadDonante: datos[i].ciudadDonante,
                                        direccionDonante: datos[i].direccionDonante,
                                        generDonacion: datos[i].genero,
                                        edadDonacion: datos[i].edad,


                                    });
                                }

                            });
                        }

                        else if (this.listadoDonacion == 'En Almacén') {
                            this.headers = this.headers6;
                            axios.get(url52 + this.listadoDonacion).then(response => {

                                let datos = response.data;
                                for (var i in datos) {
                                    this.desserts.push({

                                        idDonacion: datos[i].idDonacion,
                                        fechaEntregaDonacion: new Date(datos[i].fechaEntrega).toISOString('es-CO').split('T')[0],
                                        nombreDonanteDonacion: datos[i].nombreDonante,
                                        tipoDonacion: datos[i].tipo,
                                        prioridadDonacion: datos[i].prioridad,
                                        cantidadDonacion: datos[i].cantidad,
                                        almacenDonacion: datos[i].almacen,
                                        descripcionDonacion: datos[i].descripcion,
                                        brigadistaDonacion: datos[i].nombreBrigadista,
                                        estadoDonacion: datos[i].estado,

                                    });
                                }

                            });
                        }

                        else if (this.listadoDonacion == 'Entregada') {
                            this.headers = this.headers5;
                            axios.get(url52 + this.listadoDonacion).then(response => {

                                let datos = response.data;
                                for (var i in datos) {
                                    this.desserts.push({

                                        idDonacion: datos[i].idDonacion,
                                        fechaEntregaDonacion: new Date(datos[i].fechaEntrega).toISOString('es-CO').split('T')[0],
                                        nombreDonanteDonacion: datos[i].nombreDonante,
                                        tipoDonacion: datos[i].tipo,
                                        prioridadDonacion: datos[i].prioridad,
                                        cantidadDonacion: datos[i].cantidad,
                                        descripcionDonacion: datos[i].descripcion,
                                        brigadistaDonacion: datos[i].nombreBrigadista,
                                        estadoDonacion: datos[i].estado,
                                        donadoDonacion: datos[i].donado,
                                        fechaSalidaDonacion: new Date(datos[i].fechaSalida).toISOString('es-CO').split('T')[0]

                                    });
                                }

                            });
                        }
                    }
                    else if (this.listado == 'Dotaciones') {
                        this.listadoDonacion = null;
                        document.getElementById("div_brigadistas").style.display = "none";
                        document.getElementById("div_donaciones").style.display = "none";
                        document.getElementById("div_dotaciones").style.display = "block";
                        document.getElementById("div_eventos").style.display = "none";
                        let rol = this.rolBrigadistaActual;
                        let empresa = this.empresaBrigadistaActual;
                        this.headers = this.headers4;
                        this.datosUsuario();
                        axios.get(url70 + rol + '/' + empresa)
                            .then(response => {
                                let datos = response.data;
                                for (var i in datos) {

                                    this.desserts.push({

                                        idDotacion: datos[i].idDotacion,
                                        nombreDotacion: datos[i].nombreDotacion,
                                        empresaDotacion: datos[i].nombreEmpresa,
                                        tipoDotacion: datos[i].tipo,
                                        estadoDotacion: datos[i].estado,
                                        observacionDotacion: datos[i].observacion,
                                        idEmpresaDotacion: datos[i].idEmpresa,



                                    });
                                }

                            });
                    }
                    else if (this.listado == 'Empresas') {
                        this.headers = this.headers3;
                        this.datosUsuario();
                        axios.get(url20).then(response => {
                            let datos = response.data;
                            for (var i in datos) {
                                this.desserts.push({

                                    idEmpresa: datos[i].idEmpresa,
                                    nombreEmpresa: datos[i].nombreEmpresa,
                                    tipoEmpresa: datos[i].tipo,
                                    celularEmpresa: datos[i].celular,
                                    paisEmpresa: datos[i].pais,
                                    departamentoEmpresa: datos[i].departamento,
                                    ciudadEmpresa: datos[i].ciudad,
                                    direccionEmpresa: datos[i].direccion,
                                });
                            }

                        });
                    }

                },


                //-------------------------------Brigadista----------------------------------



                // crea un nuevo brigadista con los datos recolectados en el dialog
                addBrigadista() {

                    let id_brigadista = this.nuevoIdBrigadista;
                    let nombre_brigadista = this.nuevoNombreBrigadista;
                    let profesion = this.nuevoProfesionBrigadista;
                    let email = this.nuevoCorreoBrigadista;
                    let password = this.nuevoIdBrigadista;
                    let fechaInicio = this.fv_1;
                    let rol = this.nuevoRolBrigadista;
                    let empresa = this.nuevaEmpresaBrigadista;
                    let pais = this.nuevoPaisBrigadista;
                    let departamento = this.nuevoDepartamentoBrigadista;
                    let ciudad = this.nuevoCiudadBrigadista;
                    const dire = this.nuevadireccionBrigadista1;
                    let rh = this.nuevoRHBrigadista;
                    let celular = this.nuevoCelularBrigadista;
                    let estado = 'Activo';


                    axios.post(url3 + id_brigadista + '/' + nombre_brigadista + '/' + profesion + '/' + email + '/' + password + '/' + fechaInicio + '/' + rol + '/' + empresa + '/' + pais + '/' + departamento + '/' + ciudad + '/' + dire + '/' + rh + '/' + celular + '/' + estado).then(response => {
                        this.add_brigadista = false;
                        this.listaDatos();
                        this.nuevoIdBrigadista = null,
                            this.nuevoNombreBrigadista = null,
                            this.nuevoProfesionBrigadista = null,
                            this.nuevoCorreoBrigadista = null,
                            this.nuevoRolBrigadista = null,
                            this.nuevaEmpresaBrigadista = null,
                            this.nuevoDepartamentoBrigadista = null,
                            this.nuevoPaisBrigadista = null,
                            this.nuevadireccionBrigadista1 = null,
                            this.nuevadireccionBrigadista2 = null,
                            this.nuevoCiudadBrigadista = null,
                            this.nuevoRHBrigadista = null,
                            this.nuevoCelularBrigadista = null,
                            this.nuevoEstadoBrigadista = null,
                            this.fv_1 = null,

                            Swal.fire({
                                title: 'Brigadista Añadido!',
                                icon: 'success',
                                timer: 1000,
                                showConfirmButton: false,

                            });

                    });

                },

                // crea un nuevo brigadista con los datos recolectados en el dialog
                addEmpresa() {

                    let nit = this.addNitEmpresa;
                    let nombre = this.addNombreEmpresa;
                    let tipo = this.addTipoEmpresa;
                    let celular = this.addCelularEmpresa;
                    let pais = this.addPaisEmpresa;
                    let departamento = this.addDepartamentoEmpresa;
                    let ciudad = this.addCiudadEmpresa;
                    let direccion = this.addDireccionEmpresa + ' ' + this.addDireccionEmpresa2;


                    axios.post(url21 + nit + '/' + nombre + '/' + tipo + '/' + celular + '/' + pais + '/' + departamento + '/' + ciudad + '/' + direccion).then(response => {
                        this.add_empresa = false;
                        this.listaDatos();
                        this.addNombreEmpresa = null,
                            this.addNitEmpresa = null,
                            this.addTipoEmpresa = null,
                            this.addCelularEmpresa = null,
                            this.addPaisEmpresa = null,
                            this.addDepartamentoEmpresa = null,
                            this.addCiudadEmpresa = null,
                            this.addDireccionEmpresa = null,
                            this.addDireccionEmpresa2 = null,

                            Swal.fire({
                                title: 'Empresa Añadida!',
                                icon: 'success',
                                timer: 1000,
                                showConfirmButton: false,

                            });

                    });

                },
                editEmpresa(item) {
                    this.editIdEmpresa = Object.assign({}, item).idEmpresa;
                    this.editNombreEmpresa = Object.assign({}, item).nombreEmpresa;
                    this.editTipoEmpresa = Object.assign({}, item).tipoEmpresa;
                    this.editCelularEmpresa = Object.assign({}, item).celularEmpresa;
                    this.editPaisEmpresa = Object.assign({}, item).paisEmpresa;
                    this.editDepartamentoEmpresa = Object.assign({}, item).departamentoEmpresa;
                    this.editCiudadEmpresa = Object.assign({}, item).ciudadEmpresa;
                    this.editDireccionEmpresa = Object.assign({}, item).direccionEmpresa;
                    this.edit_empresa = true;

                },

                refreshEmpresa() {


                    let id = this.editIdEmpresa;
                    let nombre = this.editNombreEmpresa;
                    let tipo = this.editTipoEmpresa;
                    let celular = this.editCelularEmpresa;
                    let pais = this.editPaisEmpresa;
                    let departamento = this.editDepartamentoEmpresa;
                    let ciudad = this.editCiudadEmpresa;
                    let direccion = this.editDireccionEmpresa;


                    axios.post(url22 + nombre + '/' + tipo + '/' + celular + '/' + pais + '/' + departamento + '/' + ciudad + '/' + direccion + '/' + id).then(response => {
                        this.edit_empresa = false;
                        this.listaDatos();
                        this.editNombreEmpresa = null,
                            this.editPaisEmpresa = null,
                            this.editDepartamentoEmpresa = null,
                            this.editTipoEmpresa = null,
                            this.editCelularEmpresa = null,
                            this.editCiudadEmpresa = null,
                            this.editDireccionEmpresa = null,
                            this.editIdEmpresa = null,

                            Swal.fire({
                                title: 'Empresa Actualizada!',
                                icon: 'success',
                                timer: 1000,
                                showConfirmButton: false,

                            });

                    });

                },

                editBrigadista(item) {
                    this.editIdBrigadista = Object.assign({}, item).idBrigadista;
                    this.editFechaBrigadista = Object.assign({}, item).fechaInicioBrigadista;
                    this.editNombreBrigadista = Object.assign({}, item).nombreBrigadista;
                    this.editCorreoBrigadista = Object.assign({}, item).emailBrigadista;
                    this.editCelularBrigadista = Object.assign({}, item).celularBrigadista;
                    this.editDireccionBrigadista = Object.assign({}, item).direccionBrigadista;
                    this.editRHBrigadista = Object.assign({}, item).rhBrigadista;
                    this.editProfesionBrigadista = Object.assign({}, item).profesionBrigadista;
                    this.editRolBrigadista = Object.assign({}, item).idRolBrigadista;
                    this.editPaisBrigadista = Object.assign({}, item).paisBrigadista;
                    this.editDepartamentoBrigadista = Object.assign({}, item).departamentoBrigadista;
                    this.editCiudadBrigadista = Object.assign({}, item).ciudadBrigadista;
                    this.editEmpresaBrigadista = Object.assign({}, item).idEmpresaBrigadista;
                    this.editEstadoBrigadista = Object.assign({}, item).estadoBrigadista;
                    this.edit_brigadista = true;

                },

                //Elimina a un brigadista desde el listado con el id
                deleteEmpresa(item) {
                    Swal.fire({
                        icon: 'info',
                        title: '<p style="font-size: 19px;">¿Está seguro de eliminar la empresa?</p>',
                        width: 425,
                        height: 10,
                        margin: 0,
                        html: '<p style="font-size: 14px;font-weight: 40;">Esta acción es irreversible.</p>',
                        showConfirmButton: true,
                        showCancelButton: true,
                        confirmButtonText: 'Continuar',
                        cancelButtonText: 'Cancelar',
                        cancelButtonColor: 'red',
                        confirmButtonColor: 'green',
                        backdrop: 'rgba(255, 0, 0, 0.475)',

                    }).then((result) => {

                        if (result.isConfirmed) {
                            axios.delete(url23 + Object.assign({}, item).idEmpresa).then(response => {
                                this.listaDatos();
                                Swal.fire({
                                    title: 'Empresa Eliminada!',
                                    icon: 'success',
                                    timer: 980,
                                    showConfirmButton: false,
                                });

                            });
                        }
                    })
                },

                refreshBrigadista() {



                    let id_brigadista = this.editIdBrigadista;
                    let nombre_brigadista = this.editNombreBrigadista;
                    let profesion = this.editProfesionBrigadista;
                    let email = this.editCorreoBrigadista;
                    let fechaInicio = this.editFechaBrigadista;
                    let estado = this.editEstadoBrigadista;
                    let rol = this.editRolBrigadista;
                    let empresa = this.editEmpresaBrigadista;
                    let pais = this.editPaisBrigadista;
                    let departamento = this.editDepartamentoBrigadista;
                    let ciudad = this.editCiudadBrigadista;
                    const dire = this.editDireccionBrigadista;
                    let rh = this.editRHBrigadista;
                    let celular = this.editCelularBrigadista;


                    axios.post(url4 + nombre_brigadista + '/' + profesion + '/' + email + '/' + fechaInicio + '/' + rol + '/' + empresa + '/' + pais + '/' + departamento + '/' + ciudad + '/' + dire + '/' + rh + '/' + celular + '/' + estado + '/' + id_brigadista).then(response => {
                        this.edit_brigadista = false;
                        this.listaDatos();
                        this.editIdBrigadista = null,
                            this.editNombreBrigadista = null,
                            this.editProfesionBrigadista = null,
                            this.editCorreoBrigadista = null,
                            this.editRolBrigadista = null,
                            this.editEmpresaBrigadista = null,
                            this.editPaisBrigadista = null,
                            this.editDepartamentoBrigadista = null,
                            this.editCiudadBrigadista = null,
                            this.editDireccionBrigadista = null,
                            this.editDireccionBrigadista2 = null,
                            this.editRHBrigadista = null,
                            this.editCelularBrigadista = null,
                            this.editFechaBrigadista = null,
                            this.editEstadoBrigasita = null,

                            Swal.fire({
                                title: 'Brigadista Actualizado!',
                                icon: 'success',
                                timer: 1000,
                                showConfirmButton: false,

                            });

                    });

                },

                //Elimina a un brigadista desde el listado con el id
                deleteBrigadista(item) {
                    Swal.fire({
                        icon: 'info',
                        title: '<p style="font-size: 19px;">¿Está seguro de eliminar al brigadista?</p>',
                        width: 425,
                        height: 10,
                        margin: 0,
                        html: '<p style="font-size: 14px;font-weight: 40;">Esta acción es irreversible.</p>',
                        showConfirmButton: true,
                        showCancelButton: true,
                        confirmButtonText: 'Continuar',
                        cancelButtonText: 'Cancelar',
                        cancelButtonColor: 'red',
                        confirmButtonColor: 'green',
                        backdrop: 'rgba(255, 0, 0, 0.475)',

                    }).then((result) => {

                        if (result.isConfirmed) {
                            axios.delete(url5 + Object.assign({}, item).idBrigadista).then(response => {
                                this.listaDatos();
                                Swal.fire({
                                    title: 'Empleado Eliminado!',
                                    icon: 'success',
                                    timer: 980,
                                    showConfirmButton: false,
                                });

                            });
                        }
                    })
                },


                //-----------------------------Cambio Contraseña---------------------------------

                //--------------------Crea el item de dialogo ----------------------

                crearCambioContrasenia(item) {
                    this.dialogoContraseniaUser = true;

                    this.idBrigadistaSeleccionado = Object.assign({}, item).idBrigadista;
                    this.nombreBrigadistaSeleccionado = Object.assign({}, item).nombreBrigadista;
                },
                //-------Cambia la contraseña desde el listado de brigadistas-------
                guardarContraseniaUser: function () {

                    let password = this.nuevaContraseniaUser;
                    let id_brigadista = this.idBrigadistaSeleccionado;
                    axios.post(url2 + password + '/' + id_brigadista).then(response => {

                        this.listaDatos();

                        this.dialogoContraseniaUser = false,
                            this.nuevaContraseniaUser = null,

                            Swal.fire({
                                title: 'Contraseña cambiada con exito!',
                                icon: 'success',
                                timer: 980,
                                showConfirmButton: false,

                            });

                    });
                },

                confirmarContrasenia(item) {
                    let nueva = Object.assign({}, item).nuevaPassword;
                    let id = Object.assign({}, item).idBrigadista;
                    Swal.fire({
                        icon: 'info',
                        title: '<p style="font-size: 19px;">¿Está seguro de confirmar cambio de contraseña?</p>',
                        width: 425,
                        height: 10,
                        margin: 0,
                        html: '<p style="font-size: 14px;font-weight: 40;">Esta acción es irreversible.</p>',
                        showConfirmButton: true,
                        showCancelButton: true,
                        confirmButtonText: 'Continuar',
                        cancelButtonText: 'Cancelar',
                        cancelButtonColor: 'red',
                        confirmButtonColor: 'green',
                        backdrop: 'rgba(255, 0, 0, 0.475)',

                    }).then((result) => {

                        if (result.isConfirmed) {
                            axios.post(url7 + nueva + '/' + id).then(response => {

                                this.listaDatos();
                                Swal.fire({
                                    title: 'Contraseña cambiada!',
                                    icon: 'success',
                                    timer: 980,
                                    showConfirmButton: false,
                                });

                            });
                        }
                    })

                },

                //Visualiza la info de todos los datos del Usuario/brigadista
                masInfoBrigadista(item){
                    this.dialogoMasInfoBrigadista=true;
                    this.infoIdBrigadista= Object.assign({}, item).idBrigadista;
                    this.infoNombreBrigadista=Object.assign({}, item).nombreBrigadista;
                    this.infoProfesionBrigadista=Object.assign({}, item).profesionBrigadista;
                    this.infoCorreoBrigadista=Object.assign({}, item).emailBrigadista;
                    this.infoFechaInicioBrigadista=Object.assign({}, item).fechaInicioBrigadista;
                    this.infoRolBrigadista=Object.assign({}, item).rolBrigadista;
                    this.infoEmpresaBrigadista=Object.assign({}, item).empresaBrigadista;
                    this.infoPaisBrigadista=Object.assign({}, item).paisBrigadista;
                    this.infoDepartamentoBrigadista=Object.assign({}, item).departamentoBrigadista;
                    this.infoCiudadBrigadista=Object.assign({}, item).ciudadBrigadista;
                    this.infoDireccionBrigadista=Object.assign({}, item).direccionBrigadista;
                    this.infoRHBrigadista=Object.assign({}, item).rhBrigadista;
                    this.infoCelularBrigadista= Object.assign({}, item).celularBrigadista;
                    this.infoEstadoBrigadista=Object.assign({}, item).estadoBrigadista;


                },

                // realiza la busqueda de cursos realizados por el brigadista
                cursosBrigadista(item) {
                    this.dessertsBrigadista.splice(0);
                    this.dialogoCursosBrigadista = true;
                    this.headersBrigadista = this.headersBrigadista0;

                    this.idBrigadistaCursos = Object.assign({}, item).idBrigadista;
                    this.nombreBrigadistaCursos = Object.assign({}, item).nombreBrigadista;

                    axios.get(url61 + this.idBrigadistaCursos)
                        .then(response => {
                            let datos = response.data;
                            for (var i in datos) {

                                this.dessertsBrigadista.push({


                                    nombreCurso: datos[i].nombreCurso,
                                    fechaInicioCurso: new Date(datos[i].fechaInicio).toISOString('es-CO').split('T')[0],
                                    fechaFinCurso: new Date(datos[i].fechaFin).toISOString('es-CO').split('T')[0],
                                    lugarCurso: datos[i].lugar,
                                    intensidadHorariaCurso: datos[i].intensidadHoraria,
                                    idCurso: datos[i].idCurso,

                                });
                            }
                        });



                },

                addCurso() {

                    let nombre = this.addNombreCurso;
                    let fechaIni = this.fv_3;
                    let fechaFi = this.fv_4;
                    let lugar = this.addLugarCurso;
                    let intensidad = this.addIntensidadHorariaCurso;
                    let brigadista = this.idBrigadistaCursos;


                    axios.post(url62 + brigadista + '/' + nombre + '/' + fechaIni + '/' + fechaFi + '/' + lugar + '/' + intensidad).then(response => {
                        this.add_cursos = false;
                        this.dialogoCursosBrigadista = false;
                        this.listaDatos();
                        this.addNombreCurso = null,
                            this.fv_3 = null,
                            this.fv_4 = null,
                            this.addLugarCurso = null,
                            this.addIntensidadHorariaCurso = null,


                            Swal.fire({
                                title: 'Curso registrado!',
                                icon: 'success',
                                timer: 1000,
                                showConfirmButton: false,

                            });

                    });

                },
                //agrega un nuevo evento con los datos registrados en el dialogo
                addEvento() {

                    let nombre = this.addNombreEvento;
                    let fechaIni = this.fv_5;
                    let fechaFi = this.fv_6;
                    let descripcion = this.addDetalleEvento;                    
                    let lugar = this.addLugarEvento;
                    let horario = this.addHorarioEvento;                    


                    axios.post(url81 + nombre + '/' + descripcion + '/' + lugar + '/' + fechaIni + '/' + fechaFi + '/' + horario).then(response => {
                        this.add_evento = false;
                        this.listaDatos();
                        this.addNombreEvento = null,
                            this.fv_5 = null,
                            this.fv_6 = null,
                            this.addLugarEvento = null,
                            this.addDetalleEvento = null,
                            this.addHorarioEvento = null,


                            Swal.fire({
                                title: 'Evento registrado!',
                                icon: 'success',
                                timer: 1000,
                                showConfirmButton: false,

                            });

                    });

                },
                //almacena los datos que vienen de item para poder modificarlos
                editEvento(item){                    

                    this.editNombreEvento = Object.assign({}, item).nombreEvento;
                    this.editfv_5 = Object.assign({}, item).fechaInicioEvento;
                    this.editfv_6 = Object.assign({}, item).fechaFinEvento;
                    this.editDetalleEvento = Object.assign({}, item).detallesEvento;
                    this.editLugarEvento = Object.assign({}, item).lugarEvento;
                    this.editHorarioEvento = Object.assign({}, item).horarioEvento;
                    this.editIdEvento = Object.assign({}, item).idEvento;
                    this.edit_evento=true;

                },
                //actualiza los datos de eventos con los ingresados y nos manda un mensaje de exito
                refreshEvento(){ 
                    let nombreE = this.editNombreEvento;
                    let fechaInicioE = this.editfv_5;
                    let fechaFinE = this.editfv_6;
                    let detalleE = this.editDetalleEvento;
                    let lugarE = this.editLugarEvento;
                    let horarioE = this.editHorarioEvento;
                    let idEve = this.editIdEvento;
                    axios.post(url82+nombreE + '/' + detalleE + '/' + lugarE + '/' + fechaInicioE + '/' + fechaFinE + '/' + horarioE +'/' + idEve).then(response => {
                        this.edit_evento = false;
                        this.listaDatos();
                        this.editNombreEvento = null,
                            this.editfv_5 = null,
                            this.editfv_6 = null,
                            this.editDetalleEvento = null,
                            this.editLugarEvento = null,
                            this.editHorarioEvento = null,

                            Swal.fire({
                                title: 'Evento Actualizado!',
                                icon: 'success',
                                timer: 1000,
                                showConfirmButton: false,

                            });

                    });


                },

                //Elimina a un evento desde el listado con el id
                deleteEvento(item) {
                    Swal.fire({
                        icon: 'info',
                        title: '<p style="font-size: 19px;">¿Está seguro de eliminar el evento?</p>',
                        width: 425,
                        height: 10,
                        margin: 0,
                        html: '<p style="font-size: 14px;font-weight: 40;">Esta acción es irreversible.</p>',
                        showConfirmButton: true,
                        showCancelButton: true,
                        confirmButtonText: 'Continuar',
                        cancelButtonText: 'Cancelar',
                        cancelButtonColor: 'red',
                        confirmButtonColor: 'green',
                        backdrop: 'rgba(255, 0, 0, 0.475)',

                    }).then((result) => {

                        if (result.isConfirmed) {
                            let id =Object.assign({},item).idEvento;
                            axios.delete(url83 + id).then(response => {
                                this.listaDatos();                             
                                Swal.fire({
                                    title: 'Evento Eliminado!',
                                    icon: 'success',
                                    timer: 980,
                                    showConfirmButton: false,
                                });

                            });
                        }
                    })
                },


                //Elimina a un brigadista desde el listado con el id
                deleteCurso(item) {
                    Swal.fire({
                        icon: 'info',
                        title: '<p style="font-size: 19px;">¿Está seguro de eliminar el curso?</p>',
                        width: 425,
                        height: 10,
                        margin: 0,
                        html: '<p style="font-size: 14px;font-weight: 40;">Esta acción es irreversible.</p>',
                        showConfirmButton: true,
                        showCancelButton: true,
                        confirmButtonText: 'Continuar',
                        cancelButtonText: 'Cancelar',
                        cancelButtonColor: 'red',
                        confirmButtonColor: 'green',
                        backdrop: 'rgba(255, 0, 0, 0.475)',

                    }).then((result) => {

                        if (result.isConfirmed) {
                            axios.delete(url63 + Object.assign({}, item).idCurso).then(response => {
                                this.dessertsBrigadista.splice(0);
                                this.dialogoCursosBrigadista = false;
                                Swal.fire({
                                    title: 'Curso Eliminado!',
                                    icon: 'success',
                                    timer: 980,
                                    showConfirmButton: false,
                                });

                            });
                        }
                    })
                },
                //----- Verifica y cambia la contraseña al usuario que inicio sesion------
                guardarContrasenia: function () {


                    if (this.actualContrasenia == this.passwordBrigadistaActual) {
                        if (this.nuevaContrasenia1 == this.nuevaContrasenia2) {

                            let password = this.nuevaContrasenia1;
                            let id_brigadista = this.idBrigadistaActual;
                            axios.post(url2 + password + '/' + id_brigadista).then(response => {
                                this.actualContrasenia = null;
                                this.listaDatos();
                                this.nuevaContrasenia1 = null;
                                this.nuevaContrasenia2 = null;
                                this.dialogoContrasenia = false;

                                Swal.fire({
                                    title: 'Contraseña cambiada con exito!',
                                    icon: 'success',
                                    timer: 980,
                                    showConfirmButton: false,

                                });

                            });


                            Swal.fire({
                                title: 'Contraseña cambiada!',
                                icon: 'success',
                                timer: 1500,
                                showConfirmButton: false,
                            });
                            this.dialogoContrasenia = false
                        }
                        else {
                            Swal.fire({
                                title: 'La contraseña nueva no coincide, intente nuevamente',
                                icon: 'info',
                                timer: 2000,
                                showConfirmButton: false,
                            });

                        }

                    }
                    else {
                        Swal.fire({
                            title: 'La contraseña actual es incorrecta!',
                            icon: 'info',
                            timer: 2000,
                            showConfirmButton: false,
                        });

                    }

                },


                //-----------------------Empresas--------------------------
                //almacena en un array los datos de las profesiones
                listado_empresas: function () {
                    axios.get(url20)
                        .then(response => {
                            let datos = response.data;
                            for (var i in datos) {
                                this.listadoEmpresa.push({
                                    idEmpresa: datos[i].idEmpresa,
                                    nombreEmpresa: datos[i].nombreEmpresa,
                                    ciudadEmpresa: datos[i].ciudad,
                                    tipoEmpresa: datos[i].tipo,
                                });
                            }
                        });

                },


                // ------------------------------Dotaciones----------------------------------
                // agrega una nueva dotacion al inventario
                addDotacion() {

                    let nombre = this.addNombreDotacion;
                    let empresa = this.addEmpresaDotacion;
                    let tipo = this.addTipoDotacion;
                    let estado = 'Disponible';
                    let observacion = this.addObservacionDotacion;


                    axios.post(url71 + nombre + '/' + empresa + '/' + tipo + '/' + estado + '/' + observacion).then(response => {
                        this.addNombreDotacion = null;
                        this.addEmpresaDotacion = null;
                        this.listaDatos();
                        this.addTipoDotacion = null,
                            this.addObsevacionDotacion = null,
                            this.add_dotacion = false,



                            Swal.fire({
                                title: 'Dotación registrada!',
                                icon: 'success',
                                timer: 1000,
                                showConfirmButton: false,

                            });

                    });

                },


                editDonacion(item) {
                    this.editTipoDonanteDonacion = Object.assign({}, item).tipoDonante;
                    this.editNombreDonanteDonacion = Object.assign({}, item).nombreDonante;
                    this.editDocumentoDonanteDonacion = Object.assign({}, item).documentoDonante;
                    this.editEmpresaDonante = this.editDocumentoDonanteDonacion;
                    this.editCelularDonanteDonacion = Object.assign({}, item).celularDonante;
                    this.editPaisDonanteDonacion = Object.assign({}, item).paisDonante;
                    this.editDepartamentoDonanteDonacion = Object.assign({}, item).departamentoDonante;
                    this.editCiudadDonanteDonacion = Object.assign({}, item).ciudadDonante;
                    this.editDireccionDonanteDonacion = Object.assign({}, item).direccionDonante;
                    this.editTipoDonacion = Object.assign({}, item).tipoDonacion;
                    this.editPrioridadDonacion = Object.assign({}, item).prioridadDonacion;
                    this.editCantidadDonacion = Object.assign({}, item).cantidadDonacion;
                    this.editObservacionDonacion = Object.assign({}, item).observacionesDonacion;
                    this.editDescripcionDonacion = Object.assign({}, item).descripcionDonacion;
                    this.editGeneroDonacion = Object.assign({}, item).generDonacion;
                    this.editEdadDonacion = Object.assign({}, item).edadDonacion;
                    this.editIdDonacion = Object.assign({}, item).idDonacion;

                    this.edit_donacion = true;
                },
                refreshDonacion() {

                    let nombreDonante = this.editNombreDonanteDonacion;
                    let documentoDonante = this.editDocumentoDonanteDonacion;
                    let tipoDonante = this.editTipoDonanteDonacion;
                    let celularDonante = this.editCelularDonanteDonacion;
                    let paisDonante = this.editPaisDonanteDonacion;
                    let departamentoDonante = this.editDepartamentoDonanteDonacion;
                    let ciudadDonante = this.editCiudadDonanteDonacion;
                    let direccionDonante = this.editDireccionDonanteDonacion;
                    let descripcion = this.editDescripcionDonacion;
                    let tipo = this.editTipoDonacion;
                    let prioridad = this.editPrioridadDonacion;
                    let cantidad = this.editCantidadDonacion;
                    let observaciones = this.editObservacionDonacion;
                    let genero = this.editGeneroDonacion;
                    let edad = this.editEdadDonacion;
                    let idDonacion = this.editIdDonacion;
                    let estado = 'Recibida';

                    axios.post(url56 + nombreDonante + '/' + documentoDonante + '/' + celularDonante + '/'
                        + paisDonante + '/' + departamentoDonante + '/' + ciudadDonante + '/' + direccionDonante +
                        '/' + tipo + '/' + prioridad + '/' + cantidad + '/' + observaciones + '/' + estado + '/' +
                        descripcion + '/' + tipoDonante + '/' + edad + '/' + genero + '/' + idDonacion).then(response => {
                            this.edit_donacion = false;
                            this.listaDatos();
                            this.editDonanteDonacion = null,
                                this.editDescripcionDonacion = null,
                                this.editGeneroDonacion = null,
                                this.editEdadDonacion = null,
                                this.editEmpresaDonante = null,
                                this.editTipoDonacion = null,
                                this.editPrioridadDonacion = null,
                                this.editCantidadDonacion = null,
                                this.editObsevacionDonacion = null,

                                Swal.fire({
                                    title: 'Donacion Editada!',
                                    icon: 'success',
                                    timer: 1000,
                                    showConfirmButton: false,

                                });

                        });

                },

                editDotacion(item) {

                    this.editIdDotacion = Object.assign({}, item).idDotacion;
                    this.editNombreDotacion = Object.assign({}, item).nombreDotacion;
                    this.editEmpresaDotacion = Object.assign({}, item).idEmpresaDotacion;
                    this.editTipoDotacion = Object.assign({}, item).tipoDotacion;
                    this.editEstadoDotacion = Object.assign({}, item).estadoDotacion;
                    this.editObservacionDotacion = Object.assign({}, item).observacionDotacion;
                    this.edit_dotacion = true;



                },

                // edita una  dotacion del inventario
                refreshDotacion() {

                    let nombre = this.editNombreDotacion;
                    let empresa = this.editEmpresaDotacion;
                    let tipo = this.editTipoDotacion;
                    let estado = this.editEstadoDotacion;
                    let observacion = this.editObservacionDotacion;
                    let id = this.editIdDotacion;


                    axios.post(url72 + nombre + '/' + empresa + '/' + tipo + '/' + estado + '/' + observacion + '/' + id).then(response => {
                        this.editNombreDotacion = null;
                        this.editEmpresaDotacion = null;
                        this.listaDatos();
                        this.editTipoDotacion = null,
                            this.editObservacionDotacion = null,
                            this.editIdDotacion = null,
                            this.edit_dotacion = false,



                            Swal.fire({
                                title: 'Dotación Editada!',
                                icon: 'success',
                                timer: 1000,
                                showConfirmButton: false,

                            });

                    });

                },
                //Elimina a un brigadista desde el listado con el id
                deleteDotacion(item) {
                    Swal.fire({
                        icon: 'info',
                        title: '<p style="font-size: 19px;">¿Está seguro de eliminar?</p>',
                        width: 425,
                        height: 10,
                        margin: 0,
                        html: '<p style="font-size: 14px;font-weight: 40;">Esta acción es irreversible.</p>',
                        showConfirmButton: true,
                        showCancelButton: true,
                        confirmButtonText: 'Continuar',
                        cancelButtonText: 'Cancelar',
                        cancelButtonColor: 'red',
                        confirmButtonColor: 'green',
                        backdrop: 'rgba(255, 0, 0, 0.475)',

                    }).then((result) => {

                        if (result.isConfirmed) {
                            axios.delete(url73 + Object.assign({}, item).idDotacion).then(response => {
                                this.datosUsuario();
                                this.listaDatos();
                                Swal.fire({
                                    title: 'Dotacion Eliminada!',
                                    icon: 'success',
                                    timer: 980,
                                    showConfirmButton: false,
                                });

                            });
                        }
                    })
                },
                //filtro para contar inventario por estado, empresa, tipo
                filtroEstadoDotacion() {
                    this.desserts.splice(0);
                    this.headers = this.headers7;
                    this.datosUsuario();

                    axios.get(url74).then(response => {

                        let datos = response.data;
                        for (var i in datos) {
                            this.desserts.push({

                                nombreDotacionFiltro: datos[i].nombreDotacion,
                                empresaDotacionFiltro: datos[i].nombreEmpresa,
                                tipoDotacionFiltro: datos[i].tipo,
                                estadoDotacionFiltro: datos[i].estado,
                                cantidadDotacionFiltro: datos[i].cantidad,

                            });
                        }

                    });

                },




                //-----------------------------Roles---------------------------------
                //almacena en un array los datos de las profesiones
                listado_roles: function () {
                    axios.get(url40)
                        .then(response => {
                            let datos = response.data;
                            for (var i in datos) {
                                this.listadoRol.push({
                                    idRol: datos[i].idRol,
                                    nombreRol: datos[i].nombreRol,
                                });
                            }
                        });

                },

                //-----------------------------Donaciones---------------------------------
                //Crea una nueva donacion con la info que viene por parametro
                addDonacion() {


                    let nombreDonante = this.addNombreDonanteDonacion;
                    let documentoDonante = this.addDocumentoDonanteDonacion;
                    let tipoDonante = this.addTipoDonanteDonacion;
                    let celularDonante = this.addCelularDonanteDonacion;
                    let paisDonante = this.addPaisDonanteDonacion;
                    let departamentoDonante = this.addDepartamentoDonanteDonacion;
                    let ciudadDonante = this.addCiudadDonanteDonacion;
                    let direccionDonante = this.addDireccionDonanteDonacion;
                    let descripcion = this.addDescripcionDonacion;
                    let tipo = this.addTipoDonacion;
                    let prioridad = this.addPrioridadDonacion;
                    let cantidad = this.addCantidadDonacion;
                    let observaciones = this.addObsevacionDonacion;
                    let fechaEntrega = this.fechaActual;
                    let bridadista = this.idBrigadistaActual;
                    let genero = this.addGeneroDonacion;
                    let edad = this.addEdadDonacion;
                    let estado = 'Recibida';

                    axios.post(url51 + nombreDonante + '/' + documentoDonante + '/' + celularDonante + '/'
                        + paisDonante + '/' + departamentoDonante + '/' + ciudadDonante + '/' + direccionDonante +
                        '/' + tipo + '/' + prioridad + '/' + cantidad + '/' + observaciones + '/' + fechaEntrega +
                        '/' + bridadista + '/' + estado + '/' + descripcion + '/' + tipoDonante + '/' + edad + '/' + genero).then(response => {
                            this.add_donacion = false;
                            this.listaDatos();
                            this.addDonanteDonacion = null,
                                this.addDescripcionDonacion = null,
                                this.addGeneroDonacion = null,
                                this.addEdadDonacion = null,
                                this.addEmpresaDonante = null,
                                this.addTipoDonacion = null,
                                this.addPrioridadDonacion = null,
                                this.addCantidadDonacion = null,
                                this.addObsevacionDonacion = null,

                                Swal.fire({
                                    title: 'Donacion registrada!',
                                    icon: 'success',
                                    timer: 1000,
                                    showConfirmButton: false,

                                });

                        });

                },
                comprobanteDonacion() {

                },
                //almacena el id y crea el dialogo de enviar al almacén
                enviarAlmacen(item) {
                    this.dialogoEnviarAlmacen = true;
                    this.editarIdDonacion = Object.assign({}, item).idDonacion;


                },
                //Envia al almacen dado por parametro
                enviarDonacion() {

                    let id = this.editarIdDonacion;
                    let almacen = this.addAlmacenDonacion;
                    axios.post(url53 + almacen + '/' + id).then(response => {
                        this.dialogoEnviarAlmacen = false;
                        this.addAlmacenDonacion = null;
                        this.listaDatos();
                        Swal.fire({
                            title: 'Donación enviada al almacén!',
                            icon: 'success',
                            timer: 1000,
                            showConfirmButton: false,

                        });

                    });

                },

                // Almacena el id y crea el dialogo de entregar donacion
                estadoEntregado(item) {
                    this.dialogoEntregarDonacion = true;
                    this.editarIdDonacion = Object.assign({}, item).idDonacion;

                },
                // Entrega la donacion
                entregarDonacion() {
                    let id = this.editarIdDonacion;
                    let fechaSalida = this.fechaActual;
                    let donado = this.addEntregarDonacion;
                    axios.post(url54 + fechaSalida + '/' + donado + '/' + id).then(response => {
                        this.dialogoEntregarDonacion = false;
                        this.addEntregarDonacion = null;
                        this.listaDatos();
                        Swal.fire({
                            title: 'Donación entregada!',
                            icon: 'success',
                            timer: 1000,
                            showConfirmButton: false,

                        });

                    });

                },
                deleteDonacion(item) {
                    Swal.fire({
                        icon: 'info',
                        title: '<p style="font-size: 19px;">¿Está seguro de eliminar la donación?</p>',
                        width: 425,
                        height: 10,
                        margin: 0,
                        html: '<p style="font-size: 14px;font-weight: 40;">Esta acción es irreversible.</p>',
                        showConfirmButton: true,
                        showCancelButton: true,
                        confirmButtonText: 'Continuar',
                        cancelButtonText: 'Cancelar',
                        cancelButtonColor: 'red',
                        confirmButtonColor: 'green',
                        backdrop: 'rgba(255, 0, 0, 0.475)',

                    }).then((result) => {

                        if (result.isConfirmed) {
                            axios.delete(url55 + Object.assign({}, item).idDonacion).then(response => {
                                this.listaDatos();
                                Swal.fire({
                                    title: 'Empresa Eliminada!',
                                    icon: 'success',
                                    timer: 980,
                                    showConfirmButton: false,
                                });

                            });
                        }
                    })
                },



            }
        });









    </script>



    <style>
        /* Works on Firefox */
        *::-webkit-scrollbar {
            width: 1px;
        }

        *::-webkit-scrollbar:hover {
            width: 7px;
        }

        /* Estilos barra (thumb) de scroll */
        *::-webkit-scrollbar-thumb {
            background: #b44141;
            height: 4px;
            border-radius: 4px;
        }

        /* Estilos track de scroll */
        *::-webkit-scrollbar-track {
            border-radius: 4px;
            background: #b44141;
        }

        *::-webkit-scrollbar-track:hover,
        *::-webkit-scrollbar-track:active {
            background: #d3e0fa42;
        }

        #draw,
        #nav {
            background-color: #b44141;
        }

        #logout,
        #fullScreen,
        #draw_d {
            color: white;
            font-size: 18px;
            font-weight: 1px;
        }

        #card_t {
            margin-top: 3%;
            margin-bottom: 3%;
            box-shadow: 0 0 9px rgba(33, 33, 33, .2);
            border-radius: 20px;
            max-width: 100%;
            min-width: max-content;
            padding-bottom: 20px;
            margin-left: 3px;
            margin-right: 3px;

        }

        /*Animación del botón agregar*/
        #btn_ag {
            background-color: #608c6d;
            color: white;
            padding: 4px;
            width: 50px;
        }

        #btn_ag a {
            color: white;
            visibility: collapse;
        }

        #btn_ag .v-icon {
            margin-left: 75px;
        }

        #btn_ag:hover {
            width: 100px;
        }

        #btn_ag:hover a {
            visibility: visible;
            margin-left: -98px;
        }

        #btn_ag:hover .v-icon {
            visibility: collapse;
            transform: translateY(-10%);

        }

        #tg_one:hover {
            background-color: #00807e;
        }

        #tg_one:hover .v-icon {
            color: white;
        }

        div[class*='swal2'] {
            font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
            font-weight: bold;
        }

        .btn_eliminar:hover {
            color: #b90606;
        }

        .btn_suspender:hover {
            color: #ff6b09;
        }

        .btn_editar:hover {
            color: #04509c;

        }

        #btn_ac {
            background-color: #c24b4b;
            color: white;
            padding: 10px;
            border-radius: 5px;
            height: 50px;
            width: max-content;
        }

        .edit_c {
            background-color: rgb(228, 225, 225);
            height: 56px;
            box-shadow: 0 0 3px rgba(6, 6, 6, 0.2);
        }

        .v-autocomplete__content.menuable__content__active {
            border-radius: 10px !important;
            width: max-content;
            margin-top: 5px;
            box-shadow: 0 0 5px #95acdadb;

        }

        .v-autocomplete__content.menuable__content__active::-webkit-scrollbar {
            width: 0px;
        }

        * {
            box-sizing: border-box;
        }

        section {
            position: relative;
        }

        .btn-pluss {
            overflow: hidden;
            position: relative;
            display: block;
            padding-left: 5px;
            padding-right: 5px;
            border-radius: 22px;
            width: 60px;
            margin: 0 auto;
            background-color: white;
            -webkit-transition: width .3s .5s ease, border-radius 1.1s ease;
            transition: width .3s .5s ease, border-radius 1.1s ease;
        }

        .btn-pluss a {
            display: block;
            position: relative;
            color: #d72d2d;
            text-decoration: none;
            overflow: hidden;
            padding: 5px;
            border-radius: 5px;
        }

        .btn-pluss a:hover {
            text-decoration: inherit;
            color: white;
            background-color: #d72d2d;
            -webkit-transition: background-color .5s ease;
            transition: background-color .5s ease;
        }

        .btn-pluss:after {
            content: '+';
            position: absolute;
            top: 60%;
            left: 50%;
            display: block;
            height: 20px;
            width: 20px;
            border-radius: 100%;
            line-height: 20px;
            text-align: center;
            font-size: 1.1rem;
            background-color: #d72d2d;
            color: white;
            -webkit-transform: translateY(-30%) translateX(-30%);
            transform: translateY(-50%) translateX(-50%);
            -webkit-transition: all .3s .5s ease;
            transition: all .3s .5s ease;

            cursor: hand;
        }

        .btn-pluss ul {
            opacity: 0;
        }

        .btn-pluss ul {
            margin-top: 25px;
            opacity: 0;
            width: 100%;
            margin-left: 10px;
            -webkit-transition: all .5s ease;
            transition: all .5s ease;
            text-align: center;
            font-size: 0.9rem;
        }

        .btn-pluss ul li {
            background-color: #e4e4e4;
            margin-top: 15px;
            border-radius: 3px;
            width: 80%;
            height: 0px;
            overflow: hidden;
            -webkit-transition: height 1s ease;
            transition: height 1s ease;
        }

        .tooltip {
            position: relative;
            padding: 5px;
            border-radius: 5px;
            width: 70px;
            text-align: center;
            font-size: 0.7rem;
            font-weight: bold;
            margin: 0 auto;
            margin-bottom: 10px;
            -webkit-animation-duration: 3s;
            animation-duration: 3s;
            -webkit-animation-name: jump;
            animation-name: jump;
            -webkit-animation-iteration-count: infinite;
            animation-iteration-count: infinite;
            background-color: #fff;
            color: #d72d2d;
            -webkit-transition: all 1s ease;
            transition: all 1s ease;
            pointer-events: none;
        }

        .tooltip::after {
            content: '';
            position: absolute;
            -webkit-transform: rotate(35deg);
            transform: rotate(45deg);
            display: block;
            height: 10px;
            width: 10px;
            left: 0;
            right: 0;
            margin: 0 auto;
            background-color: inherit;
        }

        .tooltip::before {
            content: '';
            color: white;
        }

        .btn-pluss-wrapper:hover .tooltip {
            -webkit-animation-duration: 0s;
            animation-duration: 0s;
            -webkit-transition: all 1s ease;
            transition: all 1s ease;
            color: white;
            width: 90px;
        }
        

        .btn-pluss-wrapper:hover .btn-pluss {
            width: 150px;
            border-radius: 15px;
            padding-bottom: 5px;
            -webkit-transition: width .3s ease, border-radius .3s ease, padding-bottom .3s ease;
            transition: width .3s ease, border-radius .3s ease, padding-bottom .3s ease;
        }

        .btn-pluss-wrapper:hover .btn-pluss::after {
            -webkit-transition: all .3s ease;
            transition: all .3s ease;
            left: 50%;
            top: 10px;
            -webkit-transform: translateY(-5px) translateX(-50%);
            transform: translateY(-5px) translateX(-50%);
        }

        .btn-pluss-wrapper:hover .btn-pluss ul {
            opacity: 1;
            margin-top: 30px;
            -webkit-transition: all 1s ease;
            transition: all 1s ease;
        }

        .btn-pluss-wrapper:hover .btn-pluss li {
            height: 25px;
            -webkit-transition: height 1s ease;
            transition: height 1s ease;
        }

        .btn-pluss-wrapper:hover .btn-pluss li:hover {
            border-bottom: 1px solid #d2c9c9;
        }

        @-webkit-keyframes jump {
            0% {
                -webkit-transform: translateY(3px);
                transform: translateY(3px);
            }

            50% {
                -webkit-transform: translateY(-15px);
                transform: translateY(-15px);
            }

            100% {
                -webkit-transform: translateY(3px);
                transform: translateY(3px);
            }
        }

        @keyframes jump {
            0% {
                -webkit-transform: translateY(3px);
                transform: translateY(3px);
            }

            50% {
                -webkit-transform: translateY(-15px);
                transform: translateY(-15px);
            }

            100% {
                -webkit-transform: translateY(3px);
                transform: translateY(3px);
            }
        }



        #lblGestion:hover,
        #lblInforme:hover,
        #lblSolicitud:hover {
            color: rgb(218, 15, 15);
            transition: color .5s;
        }


        #imgAsobeecol {
            height: 40px;
            width: 60px;
        }




        #tablaPanel {
            /* color: black; */
            background-color: #ebd2d2;
            inline-size: auto;



        }
            

        .v-data-table-header th {
            background-color: #ff00004d;
            font-weight: bold;
            font-size: large;
            


        }
        .v-data-table tbody tr:nth-child(even) {
  background-color: #ebe0c134; /* Color intercalado para filas pares */
}

.v-data-table tbody tr:nth-child(odd) {
  background-color: #f5aeae50; /* Color intercalado para filas impares */
}

        


        #iconMenu:hover {

            box-shadow: 0px 0px 10px rgba(31, 31, 31, 0.589);
            transform: scale(1.20);
            opacity: 200;
            transform: rotate(-50%);


        }


        section {
            position: relative;
        }

        .btn-pluss {
            overflow: hidden;
            position: relative;
            display: block;
            padding-left: 5px;
            padding-right: 5px;
            border-radius: 22px;
            width: 30px;
            margin: 0 auto;
            background-color: white;
            -webkit-transition: width .3s .5s ease, border-radius 1.1s ease;
            transition: width .3s .5s ease, border-radius 1.1s ease;
        }

        .btn-pluss a {
            display: block;
            position: relative;
            color: #FA434B;
            text-decoration: none;
            overflow: hidden;
            padding: 5px;
            border-radius: 5px;
        }

        .btn-pluss a:hover {
            text-decoration: inherit;
            color: white;
            background-color: #FA434B;
            -webkit-transition: background-color .5s ease;
            transition: background-color .5s ease;
        }

        .btn-pluss:after {
            content: '+';
            position: absolute;
            top: 50%;
            left: 50%;
            display: block;
            height: 20px;
            width: 20px;
            border-radius: 100%;
            line-height: 20px;
            text-align: center;
            font-size: 1.1rem;
            background-color: #FA434B;
            color: white;
            -webkit-transform: translateY(-50%) translateX(-50%);
            transform: translateY(-50%) translateX(-50%);
            -webkit-transition: all .3s .5s ease;
            transition: all .3s .5s ease;
            cursor: pointer;
            cursor: hand;
        }

        .btn-pluss ul {
            opacity: 0;
        }

        .btn-pluss ul {
            margin-top: 15px;
            opacity: 0;
            width: 100%;
            margin-left: 0px;
            -webkit-transition: all .5s ease;
            transition: all .5s ease;
            text-align: center;
            font-size: 0.9rem;
        }

        .btn-pluss ul li {
            background-color: #e4e4e4;
            margin-top: 5px;
            border-radius: 5px;
            width: 100%;
            height: 0px;
            overflow: hidden;
            -webkit-transition: height 1s ease;
            transition: height 1s ease;
        }

        .tooltip {
            position: relative;
            padding: 5px;
            border-radius: 5px;
            width: 70px;
            text-align: center;
            font-size: 0.9rem;
            font-weight: bold;
            margin: 0 auto;
            margin-bottom: 15px;
            -webkit-animation-duration: 3s;
            animation-duration: 3s;
            -webkit-animation-name: jump;
            animation-name: jump;
            -webkit-animation-iteration-count: infinite;
            animation-iteration-count: infinite;
            background-color: #fff;
            color: #FA434B;
            -webkit-transition: all 1s ease;
            transition: all 1s ease;
            pointer-events: none;
        }

        .tooltip::after {
            content: '';
            position: absolute;
            -webkit-transform: rotate(45deg);
            transform: rotate(45deg);
            display: block;
            height: 10px;
            width: 10px;
            left: 0;
            right: 0;
            margin: 0 auto;
            background-color: inherit;
        }

        .tooltip::before {
            content: '';
            color: white;
        }

        .btn-pluss-wrapper:hover .tooltip {
            -webkit-animation-duration: 0s;
            animation-duration: 0s;
            -webkit-transition: all 1s ease;
            transition: all 1s ease;
            color: white;
            width: 90px;
        }

        .btn-pluss-wrapper:hover .tooltip::before {
            content: 'Choose!';
            display: block;
            color: #FA434B;
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            margin: 0 auto;
            -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
            -webkit-transition: all 1s .3s ease;
            transition: all 1s .3s ease;
        }

        .btn-pluss-wrapper:hover .btn-pluss {
            width: 150px;
            border-radius: 15px;
            padding-bottom: 5px;
            -webkit-transition: width .3s ease, border-radius .3s ease, padding-bottom .3s ease;
            transition: width .3s ease, border-radius .3s ease, padding-bottom .3s ease;
        }

        .btn-pluss-wrapper:hover .btn-pluss::after {
            -webkit-transition: all .3s ease;
            transition: all .3s ease;
            left: 50%;
            top: 10px;
            -webkit-transform: translateY(-5px) translateX(-50%);
            transform: translateY(-5px) translateX(-50%);
        }

        .btn-pluss-wrapper:hover .btn-pluss ul {
            opacity: 1;
            margin-top: 30px;
            -webkit-transition: all 1s ease;
            transition: all 1s ease;
        }

        .btn-pluss-wrapper:hover .btn-pluss li {
            height: 25px;
            -webkit-transition: height 1s ease;
            transition: height 1s ease;
        }

        .btn-pluss-wrapper:hover .btn-pluss li:hover {
            border-bottom: 1px solid #d2c9c9;
        }

        @-webkit-keyframes jump {
            0% {
                -webkit-transform: translateY(3px);
                transform: translateY(3px);
            }

            50% {
                -webkit-transform: translateY(-15px);
                transform: translateY(-15px);
            }

            100% {
                -webkit-transform: translateY(3px);
                transform: translateY(3px);
            }
        }

        @keyframes jump {
            0% {
                -webkit-transform: translateY(3px);
                transform: translateY(3px);
            }

            50% {
                -webkit-transform: translateY(-15px);
                transform: translateY(-15px);
            }

            100% {
                -webkit-transform: translateY(3px);
                transform: translateY(3px);
            }
        }
    </style>

</body>

</html> 